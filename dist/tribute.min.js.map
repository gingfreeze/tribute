{"version":3,"file":"tribute.min.js","sources":["../src/utils.js","../src/TributeEvents.js","../src/TributeMenuEvents.js","../src/TributeRange.js","../src/TributeSearch.js","../src/Tribute.js"],"sourcesContent":["if (!Array.prototype.find) {\r\n    Array.prototype.find = function(predicate) {\r\n        if (this === null) {\r\n            throw new TypeError('Array.prototype.find called on null or undefined')\r\n        }\r\n        if (typeof predicate !== 'function') {\r\n            throw new TypeError('predicate must be a function')\r\n        }\r\n        var list = Object(this)\r\n        var length = list.length >>> 0\r\n        var thisArg = arguments[1]\r\n        var value\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            value = list[i]\r\n            if (predicate.call(thisArg, value, i, list)) {\r\n                return value\r\n            }\r\n        }\r\n        return undefined\r\n    }\r\n}\r\n\r\nif (typeof window !== 'undefined' && typeof window.CustomEvent !== \"function\") {\r\n  function CustomEvent(event, params) {\r\n    params = params || {\r\n      bubbles: false,\r\n      cancelable: false,\r\n      detail: undefined\r\n    }\r\n    var evt = document.createEvent('CustomEvent')\r\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\r\n    return evt\r\n  }\r\n\r\n if (typeof window.Event !== 'undefined') {\r\n   CustomEvent.prototype = window.Event.prototype\r\n }\r\n\r\n  window.CustomEvent = CustomEvent\r\n}\r\n","class TributeEvents {\r\n  constructor(tribute) {\r\n    this.tribute = tribute;\r\n    this.tribute.events = this;\r\n  }\r\n\r\n  static keys() {\r\n    return [\r\n      {\r\n        key: 9,\r\n        value: \"TAB\"\r\n      },\r\n      {\r\n        key: 8,\r\n        value: \"DELETE\"\r\n      },\r\n      {\r\n        key: 13,\r\n        value: \"ENTER\"\r\n      },\r\n      {\r\n        key: 27,\r\n        value: \"ESCAPE\"\r\n      },\r\n      {\r\n        key: 32,\r\n        value: \"SPACE\"\r\n      },\r\n      {\r\n        key: 38,\r\n        value: \"UP\"\r\n      },\r\n      {\r\n        key: 40,\r\n        value: \"DOWN\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  bind(element) {\r\n    element.boundKeydown = this.keydown.bind(element, this);\r\n    element.boundKeyup = this.keyup.bind(element, this);\r\n    element.boundInput = this.input.bind(element, this);\r\n\r\n    element.addEventListener(\"keydown\", element.boundKeydown, true);\r\n    element.addEventListener(\"keyup\", element.boundKeyup, true);\r\n    element.addEventListener(\"input\", element.boundInput, true);\r\n  }\r\n\r\n  unbind(element) {\r\n    element.removeEventListener(\"keydown\", element.boundKeydown, true);\r\n    element.removeEventListener(\"keyup\", element.boundKeyup, true);\r\n    element.removeEventListener(\"input\", element.boundInput, true);\r\n\r\n    delete element.boundKeydown;\r\n    delete element.boundKeyup;\r\n    delete element.boundInput;\r\n  }\r\n\r\n  keydown(instance, event) {\r\n    if (instance.shouldDeactivate(event)) {\r\n      instance.tribute.isActive = false;\r\n      instance.tribute.hideMenu();\r\n    }\r\n\r\n    let element = this;\r\n    instance.commandEvent = false;\r\n\r\n    TributeEvents.keys().forEach(o => {\r\n      if (o.key === event.keyCode) {\r\n        instance.commandEvent = true;\r\n        instance.callbacks()[o.value.toLowerCase()](event, element);\r\n      }\r\n    });\r\n  }\r\n\r\n  input(instance, event) {\r\n    instance.inputEvent = true;\r\n    instance.keyup.call(this, instance, event);\r\n  }\r\n\r\n  click(instance, event) {\r\n    let tribute = instance.tribute;\r\n    if (tribute.menu && tribute.menu.contains(event.target)) {\r\n      let li = event.target;\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      while (li.nodeName.toLowerCase() !== \"li\") {\r\n        li = li.parentNode;\r\n        if (!li || li === tribute.menu) {\r\n          throw new Error(\"cannot find the <li> container for the click\");\r\n        }\r\n      }\r\n      tribute.selectItemAtIndex(li.getAttribute(\"data-index\"), event);\r\n      tribute.hideMenu();\r\n\r\n      // TODO: should fire with externalTrigger and target is outside of menu\r\n    } else if (tribute.current.element && !tribute.current.externalTrigger) {\r\n      tribute.current.externalTrigger = false;\r\n      setTimeout(() => tribute.hideMenu());\r\n    }\r\n  }\r\n\r\n  keyup(instance, event) {\r\n    if (instance.inputEvent) {\r\n      instance.inputEvent = false;\r\n    }\r\n    instance.updateSelection(this);\r\n\r\n    if (event.keyCode === 27) return;\r\n\r\n    if (!instance.tribute.allowSpaces && instance.tribute.hasTrailingSpace) {\r\n      instance.tribute.hasTrailingSpace = false;\r\n      instance.commandEvent = true;\r\n      instance.callbacks()[\"space\"](event, this);\r\n      return;\r\n    }\r\n\r\n    if (!instance.tribute.isActive) {\r\n      if (instance.tribute.autocompleteMode) {\r\n        instance.callbacks().triggerChar(event, this, \"\");\r\n      } else {\r\n        let keyCode = instance.getKeyCode(instance, this, event);\r\n\r\n        if (isNaN(keyCode) || !keyCode) return;\r\n\r\n        let trigger = instance.tribute.triggers().find(trigger => {\r\n          return trigger.charCodeAt(0) === keyCode;\r\n        });\r\n\r\n        if (typeof trigger !== \"undefined\") {\r\n          instance.callbacks().triggerChar(event, this, trigger);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      instance.tribute.current.mentionText.length <\r\n      instance.tribute.current.collection.menuShowMinLength\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      ((instance.tribute.current.trigger ||\r\n        instance.tribute.autocompleteMode) &&\r\n        instance.commandEvent === false) ||\r\n      (instance.tribute.isActive && event.keyCode === 8)\r\n    ) {\r\n      instance.tribute.showMenuFor(this, true);\r\n    }\r\n  }\r\n\r\n  shouldDeactivate(event) {\r\n    if (!this.tribute.isActive) return false;\r\n\r\n    if (this.tribute.current.mentionText.length === 0) {\r\n      let eventKeyPressed = false;\r\n      TributeEvents.keys().forEach(o => {\r\n        if (event.keyCode === o.key) eventKeyPressed = true;\r\n      });\r\n\r\n      return !eventKeyPressed;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getKeyCode(instance, el, event) {\r\n    let char;\r\n    let tribute = instance.tribute;\r\n    let info = tribute.range.getTriggerInfo(\r\n      false,\r\n      tribute.hasTrailingSpace,\r\n      true,\r\n      tribute.allowSpaces,\r\n      tribute.autocompleteMode\r\n    );\r\n\r\n    if (info) {\r\n      return info.mentionTriggerChar.charCodeAt(0);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  updateSelection(el) {\r\n    this.tribute.current.element = el;\r\n    let info = this.tribute.range.getTriggerInfo(\r\n      false,\r\n      this.tribute.hasTrailingSpace,\r\n      true,\r\n      this.tribute.allowSpaces,\r\n      this.tribute.autocompleteMode\r\n    );\r\n\r\n    if (info) {\r\n      this.tribute.current.selectedPath = info.mentionSelectedPath;\r\n      this.tribute.current.mentionText = info.mentionText;\r\n      this.tribute.current.selectedOffset = info.mentionSelectedOffset;\r\n    }\r\n  }\r\n\r\n  callbacks() {\r\n    return {\r\n      triggerChar: (e, el, trigger) => {\r\n        let tribute = this.tribute;\r\n        tribute.current.trigger = trigger;\r\n\r\n        let collectionItem = tribute.collection.find(item => {\r\n          return item.trigger === trigger;\r\n        });\r\n\r\n        tribute.current.collection = collectionItem;\r\n\r\n        if (\r\n          tribute.current.mentionText.length >=\r\n            tribute.current.collection.menuShowMinLength &&\r\n          tribute.inputEvent\r\n        ) {\r\n          tribute.showMenuFor(el, true);\r\n        }\r\n      },\r\n      enter: (e, el) => {\r\n        // choose selection\r\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          setTimeout(() => {\r\n            this.tribute.selectItemAtIndex(this.tribute.menuSelected, e);\r\n            this.tribute.hideMenu();\r\n          }, 0);\r\n        }\r\n      },\r\n      escape: (e, el) => {\r\n        if (this.tribute.isActive) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          this.tribute.isActive = false;\r\n          this.tribute.hideMenu();\r\n        }\r\n      },\r\n      tab: (e, el) => {\r\n        // choose first match\r\n        this.callbacks().enter(e, el);\r\n      },\r\n      space: (e, el) => {\r\n        if (this.tribute.isActive) {\r\n          if (this.tribute.spaceSelectsMatch) {\r\n            this.callbacks().enter(e, el);\r\n          } else if (!this.tribute.allowSpaces) {\r\n            e.stopPropagation();\r\n            setTimeout(() => {\r\n              this.tribute.hideMenu();\r\n              this.tribute.isActive = false;\r\n            }, 0);\r\n          }\r\n        }\r\n      },\r\n      up: (e, el) => {\r\n        // navigate up ul\r\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          let count = this.tribute.current.filteredItems.length,\r\n            selected = this.tribute.menuSelected;\r\n\r\n          if (count > selected && selected > 0) {\r\n            this.tribute.menuSelected--;\r\n            this.setActiveLi();\r\n          } else if (selected === 0) {\r\n            this.tribute.menuSelected = count - 1;\r\n            this.setActiveLi();\r\n            this.tribute.menu.scrollTop = this.tribute.menu.scrollHeight;\r\n          }\r\n        }\r\n      },\r\n      down: (e, el) => {\r\n        // navigate down ul\r\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          let count = this.tribute.current.filteredItems.length - 1,\r\n            selected = this.tribute.menuSelected;\r\n\r\n          if (count > selected) {\r\n            this.tribute.menuSelected++;\r\n            this.setActiveLi();\r\n          } else if (count === selected) {\r\n            this.tribute.menuSelected = 0;\r\n            this.setActiveLi();\r\n            this.tribute.menu.scrollTop = 0;\r\n          }\r\n        }\r\n      },\r\n      delete: (e, el) => {\r\n        if (\r\n          this.tribute.isActive &&\r\n          this.tribute.current.mentionText.length < 1\r\n        ) {\r\n          this.tribute.hideMenu();\r\n        } else if (this.tribute.isActive) {\r\n          this.tribute.showMenuFor(el);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  setActiveLi(index) {\r\n    let lis = this.tribute.menu.querySelectorAll(\"li\"),\r\n      length = lis.length >>> 0;\r\n\r\n    if (index) this.tribute.menuSelected = parseInt(index);\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      let li = lis[i];\r\n      if (i === this.tribute.menuSelected) {\r\n        li.classList.add(this.tribute.current.collection.selectClass);\r\n\r\n        let liClientRect = li.getBoundingClientRect();\r\n        let menuClientRect = this.tribute.menu.getBoundingClientRect();\r\n\r\n        if (liClientRect.bottom > menuClientRect.bottom) {\r\n          let scrollDistance = liClientRect.bottom - menuClientRect.bottom;\r\n          this.tribute.menu.scrollTop += scrollDistance;\r\n        } else if (liClientRect.top < menuClientRect.top) {\r\n          let scrollDistance = menuClientRect.top - liClientRect.top;\r\n          this.tribute.menu.scrollTop -= scrollDistance;\r\n        }\r\n      } else {\r\n        li.classList.remove(this.tribute.current.collection.selectClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  getFullHeight(elem, includeMargin) {\r\n    let height = elem.getBoundingClientRect().height;\r\n\r\n    if (includeMargin) {\r\n      let style = elem.currentStyle || window.getComputedStyle(elem);\r\n      return (\r\n        height + parseFloat(style.marginTop) + parseFloat(style.marginBottom)\r\n      );\r\n    }\r\n\r\n    return height;\r\n  }\r\n}\r\n\r\nexport default TributeEvents;\r\n","class TributeMenuEvents {\r\n  constructor(tribute) {\r\n    this.tribute = tribute;\r\n    this.tribute.menuEvents = this;\r\n    this.menu = this.tribute.menu;\r\n  }\r\n\r\n  bind(menu) {\r\n    this.menuClickEvent = this.tribute.events.click.bind(null, this);\r\n    this.menuContainerScrollEvent = this.debounce(\r\n      () => {\r\n        if (this.tribute.isActive) {\r\n          this.tribute.showMenuFor(this.tribute.current.element, false);\r\n        }\r\n      },\r\n      300,\r\n      false\r\n    );\r\n    this.windowResizeEvent = this.debounce(\r\n      () => {\r\n        if (this.tribute.isActive) {\r\n          this.tribute.range.positionMenuAtCaret(true);\r\n        }\r\n      },\r\n      300,\r\n      false\r\n    );\r\n\r\n    // fixes IE11 issues with mousedown\r\n    this.tribute.range\r\n      .getDocument()\r\n      .addEventListener(\"MSPointerDown\", this.menuClickEvent, false);\r\n    this.tribute.range\r\n      .getDocument()\r\n      .addEventListener(\"mousedown\", this.menuClickEvent, false);\r\n    window.addEventListener(\"resize\", this.windowResizeEvent);\r\n\r\n    if (this.menuContainer) {\r\n      this.menuContainer.addEventListener(\r\n        \"scroll\",\r\n        this.menuContainerScrollEvent,\r\n        false\r\n      );\r\n    } else {\r\n      window.addEventListener(\"scroll\", this.menuContainerScrollEvent);\r\n    }\r\n  }\r\n\r\n  unbind(menu) {\r\n    this.tribute.range\r\n      .getDocument()\r\n      .removeEventListener(\"mousedown\", this.menuClickEvent, false);\r\n    this.tribute.range\r\n      .getDocument()\r\n      .removeEventListener(\"MSPointerDown\", this.menuClickEvent, false);\r\n    window.removeEventListener(\"resize\", this.windowResizeEvent);\r\n\r\n    if (this.menuContainer) {\r\n      this.menuContainer.removeEventListener(\r\n        \"scroll\",\r\n        this.menuContainerScrollEvent,\r\n        false\r\n      );\r\n    } else {\r\n      window.removeEventListener(\"scroll\", this.menuContainerScrollEvent);\r\n    }\r\n  }\r\n\r\n  debounce(func, wait, immediate) {\r\n    var timeout;\r\n    return () => {\r\n      var context = this,\r\n        args = arguments;\r\n      var later = () => {\r\n        timeout = null;\r\n        if (!immediate) func.apply(context, args);\r\n      };\r\n      var callNow = immediate && !timeout;\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n      if (callNow) func.apply(context, args);\r\n    };\r\n  }\r\n}\r\n\r\nexport default TributeMenuEvents;\r\n","// Thanks to https://github.com/jeff-collins/ment.io\r\nimport \"./utils\";\r\n\r\nclass TributeRange {\r\n    constructor(tribute) {\r\n        this.tribute = tribute\r\n        this.tribute.range = this\r\n    }\r\n\r\n    getDocument() {\r\n        let iframe\r\n        if (this.tribute.current.collection) {\r\n            iframe = this.tribute.current.collection.iframe\r\n        }\r\n\r\n        if (!iframe) {\r\n            return document\r\n        }\r\n\r\n        return iframe.contentWindow.document\r\n    }\r\n\r\n    positionMenuAtCaret(scrollTo) {\r\n        let context = this.tribute.current,\r\n            coordinates\r\n\r\n        let info = this.getTriggerInfo(false, this.tribute.hasTrailingSpace, true, this.tribute.allowSpaces, this.tribute.autocompleteMode)\r\n\r\n        if (typeof info !== 'undefined') {\r\n\r\n            if(!this.tribute.positionMenu){\r\n                this.tribute.menu.style.cssText = `display: block;`\r\n                return\r\n            }\r\n\r\n            if (!this.isContentEditable(context.element)) {\r\n                coordinates = this.getTextAreaOrInputUnderlinePosition(this.tribute.current.element,\r\n                    info.mentionPosition)\r\n            }\r\n            else {\r\n                coordinates = this.getContentEditableCaretPosition(info.mentionPosition)\r\n            }\r\n\r\n            this.tribute.menu.style.cssText = `top: ${coordinates.top}px;\r\n                                     left: ${coordinates.left}px;\r\n                                     right: ${coordinates.right}px;\r\n                                     bottom: ${coordinates.bottom}px;\r\n                                     position: absolute;\r\n                                     display: block;`\r\n\r\n            if (coordinates.left === 'auto') {\r\n                this.tribute.menu.style.left = 'auto'\r\n            }\r\n\r\n            if (coordinates.top === 'auto') {\r\n                this.tribute.menu.style.top = 'auto'\r\n            }\r\n\r\n            if (scrollTo) this.scrollIntoView()\r\n\r\n            window.setTimeout(() => {\r\n                let menuDimensions = {\r\n                   width: this.tribute.menu.offsetWidth,\r\n                   height: this.tribute.menu.offsetHeight\r\n                }\r\n                let menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\r\n\r\n                let menuIsOffScreenHorizontally = window.innerWidth > menuDimensions.width && (menuIsOffScreen.left || menuIsOffScreen.right)\r\n                let menuIsOffScreenVertically = window.innerHeight > menuDimensions.height && (menuIsOffScreen.top || menuIsOffScreen.bottom)\r\n                if (menuIsOffScreenHorizontally || menuIsOffScreenVertically) {\r\n                    this.tribute.menu.style.cssText = 'display: none'\r\n                    this.positionMenuAtCaret(scrollTo)\r\n                }\r\n            }, 0)\r\n\r\n        } else {\r\n            this.tribute.menu.style.cssText = 'display: none'\r\n        }\r\n    }\r\n\r\n    get menuContainerIsBody() {\r\n        return this.tribute.menuContainer === document.body || !this.tribute.menuContainer;\r\n    }\r\n\r\n\r\n    selectElement(targetElement, path, offset) {\r\n        let range\r\n        let elem = targetElement\r\n\r\n        if (path) {\r\n            for (var i = 0; i < path.length; i++) {\r\n                elem = elem.childNodes[path[i]]\r\n                if (elem === undefined) {\r\n                    return\r\n                }\r\n                while (elem.length < offset) {\r\n                    offset -= elem.length\r\n                    elem = elem.nextSibling\r\n                }\r\n                if (elem.childNodes.length === 0 && !elem.length) {\r\n                    elem = elem.previousSibling\r\n                }\r\n            }\r\n        }\r\n        let sel = this.getWindowSelection()\r\n\r\n        range = this.getDocument().createRange()\r\n        range.setStart(elem, offset)\r\n        range.setEnd(elem, offset)\r\n        range.collapse(true)\r\n\r\n        try {\r\n            sel.removeAllRanges()\r\n        } catch (error) {}\r\n\r\n        sel.addRange(range)\r\n        targetElement.focus()\r\n    }\r\n\r\n    replaceTriggerText(text, requireLeadingSpace, hasTrailingSpace, originalEvent, item) {\r\n        let info = this.getTriggerInfo(true, hasTrailingSpace, requireLeadingSpace, this.tribute.allowSpaces, this.tribute.autocompleteMode)\r\n\r\n        if (info !== undefined) {\r\n            let context = this.tribute.current\r\n            let replaceEvent = new CustomEvent('tribute-replaced', {\r\n                detail: {\r\n                    item: item,\r\n                    instance: context,\r\n                    context: info,\r\n                    event: originalEvent,\r\n                }\r\n            })\r\n\r\n            if (!this.isContentEditable(context.element)) {\r\n                let myField = this.tribute.current.element\r\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\r\n                    ? this.tribute.replaceTextSuffix\r\n                    : ' '\r\n                text += textSuffix\r\n                let startPos = info.mentionPosition\r\n                let endPos = info.mentionPosition + info.mentionText.length + textSuffix.length\r\n                if (!this.tribute.autocompleteMode) {\r\n                    endPos += info.mentionTriggerChar.length - 1\r\n                }\r\n                myField.value = myField.value.substring(0, startPos) + text +\r\n                    myField.value.substring(endPos, myField.value.length)\r\n                myField.selectionStart = startPos + text.length\r\n                myField.selectionEnd = startPos + text.length\r\n            } else {\r\n                // add a space to the end of the pasted text\r\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\r\n                    ? this.tribute.replaceTextSuffix\r\n                    : '\\xA0'\r\n                text += textSuffix\r\n                let endPos = info.mentionPosition + info.mentionText.length\r\n                if (!this.tribute.autocompleteMode) {\r\n                    endPos += info.mentionTriggerChar.length\r\n                }\r\n                this.pasteHtml(text, info.mentionPosition, endPos)\r\n            }\r\n\r\n            context.element.dispatchEvent(new CustomEvent('input', { bubbles: true }))\r\n            context.element.dispatchEvent(replaceEvent)\r\n        }\r\n    }\r\n\r\n    pasteHtml(html, startPos, endPos) {\r\n        let range, sel\r\n        sel = this.getWindowSelection()\r\n        range = this.getDocument().createRange()\r\n        range.setStart(sel.anchorNode, startPos)\r\n        range.setEnd(sel.anchorNode, endPos)\r\n        range.deleteContents()\r\n\r\n        let el = this.getDocument().createElement('div')\r\n        el.innerHTML = html\r\n        let frag = this.getDocument().createDocumentFragment(),\r\n            node, lastNode\r\n        while ((node = el.firstChild)) {\r\n            lastNode = frag.appendChild(node)\r\n        }\r\n        range.insertNode(frag)\r\n\r\n        // Preserve the selection\r\n        if (lastNode) {\r\n            range = range.cloneRange()\r\n            range.setStartAfter(lastNode)\r\n            range.collapse(true)\r\n            sel.removeAllRanges()\r\n            sel.addRange(range)\r\n        }\r\n    }\r\n\r\n    getWindowSelection() {\r\n        if (this.tribute.collection.iframe) {\r\n            return this.tribute.collection.iframe.contentWindow.getSelection()\r\n        }\r\n\r\n        return window.getSelection()\r\n    }\r\n\r\n    getNodePositionInParent(element) {\r\n        if (element.parentNode === null) {\r\n            return 0\r\n        }\r\n\r\n        for (var i = 0; i < element.parentNode.childNodes.length; i++) {\r\n            let node = element.parentNode.childNodes[i]\r\n\r\n            if (node === element) {\r\n                return i\r\n            }\r\n        }\r\n    }\r\n\r\n    getContentEditableSelectedPath(ctx) {\r\n        let sel = this.getWindowSelection()\r\n        let selected = sel.anchorNode\r\n        let path = []\r\n        let offset\r\n\r\n        if (selected != null) {\r\n            let i\r\n            let ce = selected.contentEditable\r\n            while (selected !== null && ce !== 'true') {\r\n                i = this.getNodePositionInParent(selected)\r\n                path.push(i)\r\n                selected = selected.parentNode\r\n                if (selected !== null) {\r\n                    ce = selected.contentEditable\r\n                }\r\n            }\r\n            path.reverse()\r\n\r\n            // getRangeAt may not exist, need alternative\r\n            offset = sel.getRangeAt(0).startOffset\r\n\r\n            return {\r\n                selected: selected,\r\n                path: path,\r\n                offset: offset\r\n            }\r\n        }\r\n    }\r\n\r\n    getTextPrecedingCurrentSelection() {\r\n        let context = this.tribute.current,\r\n            text = ''\r\n\r\n        if (!this.isContentEditable(context.element)) {\r\n            let textComponent = this.tribute.current.element;\r\n            if (textComponent) {\r\n                let startPos = textComponent.selectionStart\r\n                if (textComponent.value && startPos >= 0) {\r\n                    text = textComponent.value.substring(0, startPos)\r\n                }\r\n            }\r\n\r\n        } else {\r\n            let selectedElem = this.getWindowSelection().anchorNode\r\n\r\n            if (selectedElem != null) {\r\n                let workingNodeContent = selectedElem.textContent\r\n                let selectStartOffset = this.getWindowSelection().getRangeAt(0).startOffset\r\n\r\n                if (workingNodeContent && selectStartOffset >= 0) {\r\n                    text = workingNodeContent.substring(0, selectStartOffset)\r\n                }\r\n            }\r\n        }\r\n\r\n        return text\r\n    }\r\n\r\n    getLastWordInText(text) {\r\n        var wordsArray;\r\n        if (this.tribute.autocompleteSeparator) {\r\n            wordsArray = text.split(this.tribute.autocompleteSeparator);\r\n        } else {\r\n            wordsArray = text.split(/\\s+/);\r\n        }\r\n        var wordsCount = wordsArray.length - 1;\r\n        return wordsArray[wordsCount];\r\n    }\r\n\r\n    getTriggerInfo(menuAlreadyActive, hasTrailingSpace, requireLeadingSpace, allowSpaces, isAutocomplete) {\r\n        let ctx = this.tribute.current\r\n        let selected, path, offset\r\n\r\n        if (!this.isContentEditable(ctx.element)) {\r\n            selected = this.tribute.current.element\r\n        } else {\r\n            let selectionInfo = this.getContentEditableSelectedPath(ctx)\r\n\r\n            if (selectionInfo) {\r\n                selected = selectionInfo.selected\r\n                path = selectionInfo.path\r\n                offset = selectionInfo.offset\r\n            }\r\n        }\r\n\r\n        let effectiveRange = this.getTextPrecedingCurrentSelection()\r\n        let lastWordOfEffectiveRange = this.getLastWordInText(effectiveRange)\r\n\r\n        if (isAutocomplete) {\r\n            return {\r\n                mentionPosition: effectiveRange.length - lastWordOfEffectiveRange.length,\r\n                mentionText: lastWordOfEffectiveRange,\r\n                mentionSelectedElement: selected,\r\n                mentionSelectedPath: path,\r\n                mentionSelectedOffset: offset\r\n            }\r\n        }\r\n\r\n        if (effectiveRange !== undefined && effectiveRange !== null) {\r\n            let mostRecentTriggerCharPos = -1\r\n            let triggerChar\r\n\r\n            this.tribute.collection.forEach(config => {\r\n                let c = config.trigger\r\n                let idx = config.requireLeadingSpace ?\r\n                    this.lastIndexWithLeadingSpace(effectiveRange, c) :\r\n                    effectiveRange.lastIndexOf(c)\r\n\r\n                if (idx > mostRecentTriggerCharPos) {\r\n                    mostRecentTriggerCharPos = idx\r\n                    triggerChar = c\r\n                    requireLeadingSpace = config.requireLeadingSpace\r\n                }\r\n            })\r\n\r\n            if (mostRecentTriggerCharPos >= 0 &&\r\n                (\r\n                    mostRecentTriggerCharPos === 0 ||\r\n                    !requireLeadingSpace ||\r\n                    /\\s/.test(\r\n                        effectiveRange.substring(\r\n                            mostRecentTriggerCharPos - 1,\r\n                            mostRecentTriggerCharPos)\r\n                    )\r\n                )\r\n            ) {\r\n                let currentTriggerSnippet = effectiveRange.substring(mostRecentTriggerCharPos + triggerChar.length,\r\n                    effectiveRange.length)\r\n\r\n                triggerChar = effectiveRange.substring(mostRecentTriggerCharPos, mostRecentTriggerCharPos + triggerChar.length)\r\n                let firstSnippetChar = currentTriggerSnippet.substring(0, 1)\r\n                let leadingSpace = currentTriggerSnippet.length > 0 &&\r\n                    (\r\n                        firstSnippetChar === ' ' ||\r\n                        firstSnippetChar === '\\xA0'\r\n                    )\r\n                if (hasTrailingSpace) {\r\n                    currentTriggerSnippet = currentTriggerSnippet.trim()\r\n                }\r\n\r\n                let regex = allowSpaces ? /[^\\S ]/g : /[\\xA0\\s]/g;\r\n\r\n                this.tribute.hasTrailingSpace = regex.test(currentTriggerSnippet);\r\n\r\n                if (!leadingSpace && (menuAlreadyActive || !(regex.test(currentTriggerSnippet)))) {\r\n                    return {\r\n                        mentionPosition: mostRecentTriggerCharPos,\r\n                        mentionText: currentTriggerSnippet,\r\n                        mentionSelectedElement: selected,\r\n                        mentionSelectedPath: path,\r\n                        mentionSelectedOffset: offset,\r\n                        mentionTriggerChar: triggerChar\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    lastIndexWithLeadingSpace (str, trigger) {\r\n        let reversedStr = str.split('').reverse().join('')\r\n        let index = -1\r\n\r\n        for (let cidx = 0, len = str.length; cidx < len; cidx++) {\r\n            let firstChar = cidx === str.length - 1\r\n            let leadingSpace = /\\s/.test(reversedStr[cidx + 1])\r\n\r\n            let match = true\r\n            for (let triggerIdx = trigger.length - 1; triggerIdx >= 0; triggerIdx--) {\r\n              if (trigger[triggerIdx] !== reversedStr[cidx-triggerIdx]) {\r\n                match = false\r\n                break\r\n              }\r\n            }\r\n\r\n            if (match && (firstChar || leadingSpace)) {\r\n                index = str.length - 1 - cidx\r\n                break\r\n            }\r\n        }\r\n\r\n        return index\r\n    }\r\n\r\n    isContentEditable(element) {\r\n        return element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA'\r\n    }\r\n\r\n    isMenuOffScreen(coordinates, menuDimensions) {\r\n        let windowWidth = window.innerWidth\r\n        let windowHeight = window.innerHeight\r\n        let doc = document.documentElement\r\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\r\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\r\n\r\n        let menuTop = typeof coordinates.top === 'number' ? coordinates.top : windowTop + windowHeight - coordinates.bottom - menuDimensions.height\r\n        let menuRight = typeof coordinates.right === 'number' ? coordinates.right : coordinates.left + menuDimensions.width\r\n        let menuBottom = typeof coordinates.bottom === 'number' ? coordinates.bottom : coordinates.top + menuDimensions.height\r\n        let menuLeft = typeof coordinates.left === 'number' ? coordinates.left : windowLeft + windowWidth - coordinates.right - menuDimensions.width\r\n\r\n        return {\r\n            top: menuTop < Math.floor(windowTop),\r\n            right: menuRight > Math.ceil(windowLeft + windowWidth),\r\n            bottom: menuBottom > Math.ceil(windowTop + windowHeight),\r\n            left: menuLeft < Math.floor(windowLeft)\r\n        }\r\n    }\r\n\r\n    getMenuDimensions() {\r\n        // Width of the menu depends of its contents and position\r\n        // We must check what its width would be without any obstruction\r\n        // This way, we can achieve good positioning for flipping the menu\r\n        let dimensions = {\r\n            width: null,\r\n            height: null\r\n        }\r\n\r\n        this.tribute.menu.style.cssText = `top: 0px;\r\n                                 left: 0px;\r\n                                 position: fixed;\r\n                                 display: block;\r\n                                 visibility; hidden;`\r\n       dimensions.width = this.tribute.menu.offsetWidth\r\n       dimensions.height = this.tribute.menu.offsetHeight\r\n\r\n       this.tribute.menu.style.cssText = `display: none;`\r\n\r\n       return dimensions\r\n    }\r\n\r\n    getTextAreaOrInputUnderlinePosition(element, position, flipped) {\r\n        let properties = ['direction', 'boxSizing', 'width', 'height', 'overflowX',\r\n            'overflowY', 'borderTopWidth', 'borderRightWidth',\r\n            'borderBottomWidth', 'borderLeftWidth', 'paddingTop',\r\n            'paddingRight', 'paddingBottom', 'paddingLeft',\r\n            'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch',\r\n            'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily',\r\n            'textAlign', 'textTransform', 'textIndent',\r\n            'textDecoration', 'letterSpacing', 'wordSpacing'\r\n        ]\r\n\r\n        let isFirefox = (window.mozInnerScreenX !== null)\r\n\r\n        let div = this.getDocument().createElement('div')\r\n        div.id = 'input-textarea-caret-position-mirror-div'\r\n        this.getDocument().body.appendChild(div)\r\n\r\n        let style = div.style\r\n        let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle\r\n\r\n        style.whiteSpace = 'pre-wrap'\r\n        if (element.nodeName !== 'INPUT') {\r\n            style.wordWrap = 'break-word'\r\n        }\r\n\r\n        // position off-screen\r\n        style.position = 'absolute'\r\n        style.visibility = 'hidden'\r\n\r\n        // transfer the element's properties to the div\r\n        properties.forEach(prop => {\r\n            style[prop] = computed[prop]\r\n        })\r\n\r\n        if (isFirefox) {\r\n            style.width = `${(parseInt(computed.width) - 2)}px`\r\n            if (element.scrollHeight > parseInt(computed.height))\r\n                style.overflowY = 'scroll'\r\n        } else {\r\n            style.overflow = 'hidden'\r\n        }\r\n\r\n        div.textContent = element.value.substring(0, position)\r\n\r\n        if (element.nodeName === 'INPUT') {\r\n            div.textContent = div.textContent.replace(/\\s/g, ' ')\r\n        }\r\n\r\n        let span = this.getDocument().createElement('span')\r\n        span.textContent = element.value.substring(position) || '.'\r\n        div.appendChild(span)\r\n\r\n        let rect = element.getBoundingClientRect()\r\n        let doc = document.documentElement\r\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\r\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\r\n\r\n        let top = 0;\r\n        let left = 0;\r\n        if (this.menuContainerIsBody) {\r\n          top = rect.top;\r\n          left = rect.left;\r\n        }\r\n\r\n        let coordinates = {\r\n            top: top + windowTop + span.offsetTop + parseInt(computed.borderTopWidth) + parseInt(computed.fontSize) - element.scrollTop,\r\n            left: left + windowLeft + span.offsetLeft + parseInt(computed.borderLeftWidth)\r\n        }\r\n\r\n        if (element.nodeName === 'INPUT') {\r\n            const pos = rect.left + rect.width - coordinates.left;\r\n            if (pos < 0) {\r\n                coordinates.left = rect.left + rect.width;\r\n            }\r\n        }\r\n\r\n        let windowWidth = window.innerWidth\r\n        let windowHeight = window.innerHeight\r\n\r\n        let menuDimensions = this.getMenuDimensions()\r\n        let menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\r\n\r\n        if (menuIsOffScreen.right) {\r\n            coordinates.right = windowWidth - coordinates.left\r\n            coordinates.left = 'auto'\r\n        }\r\n\r\n        let parentHeight = this.tribute.menuContainer\r\n            ? this.tribute.menuContainer.offsetHeight\r\n            : this.getDocument().body.offsetHeight\r\n\r\n        if (menuIsOffScreen.bottom) {\r\n            let parentRect = this.tribute.menuContainer\r\n                ? this.tribute.menuContainer.getBoundingClientRect()\r\n                : this.getDocument().body.getBoundingClientRect()\r\n            let scrollStillAvailable = parentHeight - (windowHeight - parentRect.top)\r\n\r\n            coordinates.bottom = scrollStillAvailable + (windowHeight - rect.top - span.offsetTop)\r\n            coordinates.top = 'auto'\r\n        }\r\n\r\n        menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\r\n        if (menuIsOffScreen.left) {\r\n            coordinates.left = windowWidth > menuDimensions.width\r\n                ? windowLeft + windowWidth - menuDimensions.width\r\n                : windowLeft\r\n            delete coordinates.right\r\n        }\r\n        if (menuIsOffScreen.top) {\r\n            coordinates.top = windowHeight > menuDimensions.height\r\n                ? windowTop + windowHeight - menuDimensions.height\r\n                : windowTop\r\n            delete coordinates.bottom\r\n        }\r\n\r\n        this.getDocument().body.removeChild(div)\r\n        return coordinates\r\n    }\r\n\r\n    getContentEditableCaretPosition(selectedNodePosition) {\r\n        let range\r\n        let sel = this.getWindowSelection()\r\n\r\n        range = this.getDocument().createRange()\r\n        range.setStart(sel.anchorNode, selectedNodePosition)\r\n        range.setEnd(sel.anchorNode, selectedNodePosition)\r\n\r\n        range.collapse(false)\r\n\r\n        let rect = range.getBoundingClientRect()\r\n        let doc = document.documentElement\r\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\r\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\r\n\r\n        let left = rect.left\r\n        let top = rect.top\r\n\r\n        let coordinates = {\r\n            left: left + windowLeft,\r\n            top: top + rect.height + windowTop\r\n        }\r\n        let windowWidth = window.innerWidth\r\n        let windowHeight = window.innerHeight\r\n\r\n        let menuDimensions = this.getMenuDimensions()\r\n        let menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\r\n\r\n        if (menuIsOffScreen.right) {\r\n            coordinates.left = 'auto'\r\n            coordinates.right = windowWidth - rect.left - windowLeft\r\n        }\r\n\r\n        let parentHeight = this.tribute.menuContainer\r\n            ? this.tribute.menuContainer.offsetHeight\r\n            : this.getDocument().body.offsetHeight\r\n\r\n        if (menuIsOffScreen.bottom) {\r\n            let parentRect = this.tribute.menuContainer\r\n                ? this.tribute.menuContainer.getBoundingClientRect()\r\n                : this.getDocument().body.getBoundingClientRect()\r\n            let scrollStillAvailable = parentHeight - (windowHeight - parentRect.top)\r\n\r\n            coordinates.top = 'auto'\r\n            coordinates.bottom = scrollStillAvailable + (windowHeight - rect.top)\r\n        }\r\n\r\n        menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\r\n        if (menuIsOffScreen.left) {\r\n            coordinates.left = windowWidth > menuDimensions.width\r\n                ? windowLeft + windowWidth - menuDimensions.width\r\n                : windowLeft\r\n            delete coordinates.right\r\n        }\r\n        if (menuIsOffScreen.top) {\r\n            coordinates.top = windowHeight > menuDimensions.height\r\n                ? windowTop + windowHeight - menuDimensions.height\r\n                : windowTop\r\n            delete coordinates.bottom\r\n        }\r\n\r\n        if (!this.menuContainerIsBody) {\r\n            coordinates.left = coordinates.left ? coordinates.left - this.tribute.menuContainer.offsetLeft : coordinates.left\r\n            coordinates.top = coordinates.top ? coordinates.top - this.tribute.menuContainer.offsetTop : coordinates.top\r\n        }\r\n\r\n        return coordinates\r\n    }\r\n\r\n    scrollIntoView(elem) {\r\n        let reasonableBuffer = 20,\r\n            clientRect\r\n        let maxScrollDisplacement = 100\r\n        let e = this.menu\r\n\r\n        if (typeof e === 'undefined') return;\r\n\r\n        while (clientRect === undefined || clientRect.height === 0) {\r\n            clientRect = e.getBoundingClientRect()\r\n\r\n            if (clientRect.height === 0) {\r\n                e = e.childNodes[0]\r\n                if (e === undefined || !e.getBoundingClientRect) {\r\n                    return\r\n                }\r\n            }\r\n        }\r\n\r\n        let elemTop = clientRect.top\r\n        let elemBottom = elemTop + clientRect.height\r\n\r\n        if (elemTop < 0) {\r\n            window.scrollTo(0, window.pageYOffset + clientRect.top - reasonableBuffer)\r\n        } else if (elemBottom > window.innerHeight) {\r\n            let maxY = window.pageYOffset + clientRect.top - reasonableBuffer\r\n\r\n            if (maxY - window.pageYOffset > maxScrollDisplacement) {\r\n                maxY = window.pageYOffset + maxScrollDisplacement\r\n            }\r\n\r\n            let targetY = window.pageYOffset - (window.innerHeight - elemBottom)\r\n\r\n            if (targetY > maxY) {\r\n                targetY = maxY\r\n            }\r\n\r\n            window.scrollTo(0, targetY)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default TributeRange;\r\n","// Thanks to https://github.com/mattyork/fuzzy\r\nclass TributeSearch {\r\n    constructor(tribute) {\r\n        this.tribute = tribute\r\n        this.tribute.search = this\r\n    }\r\n\r\n    simpleFilter(pattern, array) {\r\n        return array.filter(string => {\r\n            return this.test(pattern, string)\r\n        })\r\n    }\r\n\r\n    test(pattern, string) {\r\n        return this.match(pattern, string) !== null\r\n    }\r\n\r\n    match(pattern, string, opts) {\r\n        opts = opts || {}\r\n        let patternIdx = 0,\r\n            result = [],\r\n            len = string.length,\r\n            totalScore = 0,\r\n            currScore = 0,\r\n            pre = opts.pre || '',\r\n            post = opts.post || '',\r\n            compareString = opts.caseSensitive && string || string.toLowerCase(),\r\n            ch, compareChar\r\n\r\n        if (opts.skip) {\r\n            return {rendered: string, score: 0}\r\n        }\r\n\r\n        pattern = opts.caseSensitive && pattern || pattern.toLowerCase()\r\n\r\n        let patternCache = this.traverse(compareString, pattern, 0, 0, [])\r\n        if (!patternCache) {\r\n            return null\r\n        }\r\n        return {\r\n            rendered: this.render(string, patternCache.cache, pre, post),\r\n            score: patternCache.score\r\n        }\r\n    }\r\n\r\n    traverse(string, pattern, stringIndex, patternIndex, patternCache) {\r\n        if (this.tribute.autocompleteSeparator) {\r\n            // if the pattern search at end\r\n            pattern = pattern.split(this.tribute.autocompleteSeparator).splice(-1)[0];\r\n        }\r\n\r\n        if (pattern.length === patternIndex) {\r\n\r\n            // calculate score and copy the cache containing the indices where it's found\r\n            return {\r\n                score: this.calculateScore(patternCache),\r\n                cache: patternCache.slice()\r\n            }\r\n        }\r\n\r\n        // if string at end or remaining pattern > remaining string\r\n        if (string.length === stringIndex || pattern.length - patternIndex > string.length - stringIndex) {\r\n            return undefined\r\n        }\r\n\r\n        let c = pattern[patternIndex]\r\n        let index = string.indexOf(c, stringIndex)\r\n        let best, temp\r\n\r\n        while (index > -1) {\r\n            patternCache.push(index)\r\n            temp = this.traverse(string, pattern, index + 1, patternIndex + 1, patternCache)\r\n            patternCache.pop()\r\n\r\n            // if downstream traversal failed, return best answer so far\r\n            if (!temp) {\r\n                return best\r\n            }\r\n\r\n            if (!best || best.score < temp.score) {\r\n                best = temp\r\n            }\r\n\r\n            index = string.indexOf(c, index + 1)\r\n        }\r\n\r\n        return best\r\n    }\r\n\r\n    calculateScore(patternCache) {\r\n        let score = 0\r\n        let temp = 1\r\n\r\n        patternCache.forEach((index, i) => {\r\n            if (i > 0) {\r\n                if (patternCache[i - 1] + 1 === index) {\r\n                    temp += temp + 1\r\n                }\r\n                else {\r\n                    temp = 1\r\n                }\r\n            }\r\n\r\n            score += temp\r\n        })\r\n\r\n        return score\r\n    }\r\n\r\n    render(string, indices, pre, post) {\r\n        var rendered = string.substring(0, indices[0])\r\n\r\n        indices.forEach((index, i) => {\r\n            rendered += pre + string[index] + post +\r\n                string.substring(index + 1, (indices[i + 1]) ? indices[i + 1] : string.length)\r\n        })\r\n\r\n        return rendered\r\n    }\r\n\r\n    filter(pattern, arr, opts) {\r\n        opts = opts || {}\r\n        return arr\r\n            .reduce((prev, element, idx, arr) => {\r\n                let str = element\r\n\r\n                if (opts.extract) {\r\n                    str = opts.extract(element)\r\n\r\n                    if (!str) { // take care of undefineds / nulls / etc.\r\n                        str = ''\r\n                    }\r\n                }\r\n\r\n                let rendered = this.match(pattern, str, opts)\r\n\r\n                if (rendered != null) {\r\n                    prev[prev.length] = {\r\n                        string: rendered.rendered,\r\n                        score: rendered.score,\r\n                        index: idx,\r\n                        original: element\r\n                    }\r\n                }\r\n\r\n                return prev\r\n            }, [])\r\n\r\n        .sort((a, b) => {\r\n            let compare = b.score - a.score\r\n            if (compare) return compare\r\n            return a.index - b.index\r\n        })\r\n    }\r\n}\r\n\r\nexport default TributeSearch;\r\n","import \"./utils\";\r\nimport TributeEvents from \"./TributeEvents\";\r\nimport TributeMenuEvents from \"./TributeMenuEvents\";\r\nimport TributeRange from \"./TributeRange\";\r\nimport TributeSearch from \"./TributeSearch\";\r\n\r\nclass Tribute {\r\n  constructor({\r\n    values = null,\r\n    loadingItemTemplate = null,\r\n    iframe = null,\r\n    selectClass = \"highlight\",\r\n    containerClass = \"tribute-container\",\r\n    itemClass = \"\",\r\n    trigger = \"@\",\r\n    autocompleteMode = false,\r\n    autocompleteSeparator = null,\r\n    selectTemplate = null,\r\n    menuItemTemplate = null,\r\n    lookup = \"key\",\r\n    fillAttr = \"value\",\r\n    collection = null,\r\n    menuContainer = null,\r\n    noMatchTemplate = null,\r\n    requireLeadingSpace = true,\r\n    allowSpaces = false,\r\n    replaceTextSuffix = null,\r\n    positionMenu = true,\r\n    spaceSelectsMatch = false,\r\n    searchOpts = {},\r\n    menuItemLimit = null,\r\n    menuShowMinLength = 0\r\n  }) {\r\n    this.autocompleteMode = autocompleteMode;\r\n    this.autocompleteSeparator = autocompleteSeparator;\r\n    this.menuSelected = 0;\r\n    this.current = {};\r\n    this.inputEvent = false;\r\n    this.isActive = false;\r\n    this.menuContainer = menuContainer;\r\n    this.allowSpaces = allowSpaces;\r\n    this.replaceTextSuffix = replaceTextSuffix;\r\n    this.positionMenu = positionMenu;\r\n    this.hasTrailingSpace = false;\r\n    this.spaceSelectsMatch = spaceSelectsMatch;\r\n\r\n    if (this.autocompleteMode) {\r\n      trigger = \"\";\r\n      allowSpaces = false;\r\n    }\r\n\r\n    if (values) {\r\n      this.collection = [\r\n        {\r\n          // symbol that starts the lookup\r\n          trigger: trigger,\r\n\r\n          // is it wrapped in an iframe\r\n          iframe: iframe,\r\n\r\n          // class applied to selected item\r\n          selectClass: selectClass,\r\n\r\n          // class applied to the Container\r\n          containerClass: containerClass,\r\n\r\n          // class applied to each item\r\n          itemClass: itemClass,\r\n\r\n          // function called on select that retuns the content to insert\r\n          selectTemplate: (\r\n            selectTemplate || Tribute.defaultSelectTemplate\r\n          ).bind(this),\r\n\r\n          // function called that returns content for an item\r\n          menuItemTemplate: (\r\n            menuItemTemplate || Tribute.defaultMenuItemTemplate\r\n          ).bind(this),\r\n\r\n          // function called when menu is empty, disables hiding of menu.\r\n          noMatchTemplate: (t => {\r\n            if (typeof t === \"string\") {\r\n              if (t.trim() === \"\") return null;\r\n              return t;\r\n            }\r\n            if (typeof t === \"function\") {\r\n              return t.bind(this);\r\n            }\r\n\r\n            return (\r\n              noMatchTemplate ||\r\n              function() {\r\n                return \"<li>No Match Found!</li>\";\r\n              }.bind(this)\r\n            );\r\n          })(noMatchTemplate),\r\n\r\n          // column to search against in the object\r\n          lookup: lookup,\r\n\r\n          // column that contains the content to insert by default\r\n          fillAttr: fillAttr,\r\n\r\n          // array of objects or a function returning an array of objects\r\n          values: values,\r\n\r\n          // useful for when values is an async function\r\n          loadingItemTemplate: loadingItemTemplate,\r\n\r\n          requireLeadingSpace: requireLeadingSpace,\r\n\r\n          searchOpts: searchOpts,\r\n\r\n          menuItemLimit: menuItemLimit,\r\n\r\n          menuShowMinLength: menuShowMinLength\r\n        }\r\n      ];\r\n    } else if (collection) {\r\n      if (this.autocompleteMode)\r\n        console.warn(\r\n          \"Tribute in autocomplete mode does not work for collections\"\r\n        );\r\n      this.collection = collection.map(item => {\r\n        return {\r\n          trigger: item.trigger || trigger,\r\n          iframe: item.iframe || iframe,\r\n          selectClass: item.selectClass || selectClass,\r\n          containerClass: item.containerClass || containerClass,\r\n          itemClass: item.itemClass || itemClass,\r\n          selectTemplate: (\r\n            item.selectTemplate || Tribute.defaultSelectTemplate\r\n          ).bind(this),\r\n          menuItemTemplate: (\r\n            item.menuItemTemplate || Tribute.defaultMenuItemTemplate\r\n          ).bind(this),\r\n          // function called when menu is empty, disables hiding of menu.\r\n          noMatchTemplate: (t => {\r\n            if (typeof t === \"string\") {\r\n              if (t.trim() === \"\") return null;\r\n              return t;\r\n            }\r\n            if (typeof t === \"function\") {\r\n              return t.bind(this);\r\n            }\r\n\r\n            return (\r\n              noMatchTemplate ||\r\n              function() {\r\n                return \"<li>No Match Found!</li>\";\r\n              }.bind(this)\r\n            );\r\n          })(noMatchTemplate),\r\n          lookup: item.lookup || lookup,\r\n          fillAttr: item.fillAttr || fillAttr,\r\n          values: item.values,\r\n          loadingItemTemplate: item.loadingItemTemplate,\r\n          requireLeadingSpace: item.requireLeadingSpace,\r\n          searchOpts: item.searchOpts || searchOpts,\r\n          menuItemLimit: item.menuItemLimit || menuItemLimit,\r\n          menuShowMinLength: item.menuShowMinLength || menuShowMinLength\r\n        };\r\n      });\r\n    } else {\r\n      throw new Error(\"[Tribute] No collection specified.\");\r\n    }\r\n\r\n    new TributeRange(this);\r\n    new TributeEvents(this);\r\n    new TributeMenuEvents(this);\r\n    new TributeSearch(this);\r\n  }\r\n\r\n  get isActive() {\r\n    return this._isActive;\r\n  }\r\n\r\n  set isActive(val) {\r\n    if (this._isActive != val) {\r\n      this._isActive = val;\r\n      if (this.current.element) {\r\n        let noMatchEvent = new CustomEvent(`tribute-active-${val}`);\r\n        this.current.element.dispatchEvent(noMatchEvent);\r\n      }\r\n    }\r\n  }\r\n\r\n  static defaultSelectTemplate(item) {\r\n    if (typeof item === \"undefined\")\r\n      return `${this.current.collection.trigger}${this.current.mentionText}`;\r\n    if (this.range.isContentEditable(this.current.element)) {\r\n      return (\r\n        '<span class=\"tribute-mention\">' +\r\n        (this.current.collection.trigger +\r\n          item.original[this.current.collection.fillAttr]) +\r\n        \"</span>\"\r\n      );\r\n    }\r\n\r\n    return (\r\n      this.current.collection.trigger +\r\n      item.original[this.current.collection.fillAttr]\r\n    );\r\n  }\r\n\r\n  static defaultMenuItemTemplate(matchItem) {\r\n    return matchItem.string;\r\n  }\r\n\r\n  static inputTypes() {\r\n    return [\"TEXTAREA\", \"INPUT\"];\r\n  }\r\n\r\n  triggers() {\r\n    return this.collection.map(config => {\r\n      return config.trigger;\r\n    });\r\n  }\r\n\r\n  attach(el) {\r\n    if (!el) {\r\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\r\n    }\r\n\r\n    // Check if it is a jQuery collection\r\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\r\n      el = el.get();\r\n    }\r\n\r\n    // Is el an Array/Array-like object?\r\n    if (\r\n      el.constructor === NodeList ||\r\n      el.constructor === HTMLCollection ||\r\n      el.constructor === Array\r\n    ) {\r\n      let length = el.length;\r\n      for (var i = 0; i < length; ++i) {\r\n        this._attach(el[i]);\r\n      }\r\n    } else {\r\n      this._attach(el);\r\n    }\r\n  }\r\n\r\n  _attach(el) {\r\n    if (el.hasAttribute(\"data-tribute\")) {\r\n      console.warn(\"Tribute was already bound to \" + el.nodeName);\r\n    }\r\n\r\n    this.ensureEditable(el);\r\n    this.events.bind(el);\r\n    el.setAttribute(\"data-tribute\", true);\r\n  }\r\n\r\n  ensureEditable(element) {\r\n    if (Tribute.inputTypes().indexOf(element.nodeName) === -1) {\r\n      if (!element.contentEditable) {\r\n        throw new Error(\"[Tribute] Cannot bind to \" + element.nodeName + \", not contentEditable\");\r\n      }\r\n    }\r\n  }\r\n\r\n  createMenu(containerClass) {\r\n    let wrapper = this.range.getDocument().createElement(\"div\"),\r\n      ul = this.range.getDocument().createElement(\"ul\");\r\n    wrapper.className = containerClass;\r\n    wrapper.appendChild(ul);\r\n\r\n    if (this.menuContainer) {\r\n      return this.menuContainer.appendChild(wrapper);\r\n    }\r\n\r\n    return this.range.getDocument().body.appendChild(wrapper);\r\n  }\r\n\r\n  showMenuFor(element, scrollTo) {\r\n    // Only proceed if menu isn't already shown for the current element & mentionText\r\n    if (\r\n      this.isActive &&\r\n      this.current.element === element &&\r\n      this.current.mentionText === this.currentMentionTextSnapshot\r\n    ) {\r\n      return;\r\n    }\r\n    this.currentMentionTextSnapshot = this.current.mentionText;\r\n\r\n    // create the menu if it doesn't exist.\r\n    if (!this.menu) {\r\n      this.menu = this.createMenu(this.current.collection.containerClass);\r\n      element.tributeMenu = this.menu;\r\n      this.menuEvents.bind(this.menu);\r\n    }\r\n\r\n    this.isActive = true;\r\n    this.menuSelected = 0;\r\n\r\n    if (!this.current.mentionText) {\r\n      this.current.mentionText = \"\";\r\n    }\r\n\r\n    const processValues = values => {\r\n      // Tribute may not be active any more by the time the value callback returns\r\n      if (!this.isActive) {\r\n        return;\r\n      }\r\n\r\n      let items = this.search.filter(this.current.mentionText, values, {\r\n        pre: this.current.collection.searchOpts.pre || \"<span>\",\r\n        post: this.current.collection.searchOpts.post || \"</span>\",\r\n        skip: this.current.collection.searchOpts.skip,\r\n        extract: el => {\r\n          if (typeof this.current.collection.lookup === \"string\") {\r\n            return el[this.current.collection.lookup];\r\n          } else if (typeof this.current.collection.lookup === \"function\") {\r\n            return this.current.collection.lookup(el, this.current.mentionText);\r\n          } else {\r\n            throw new Error(\r\n              \"Invalid lookup attribute, lookup must be string or function.\"\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      if (this.current.collection.menuItemLimit) {\r\n        items = items.slice(0, this.current.collection.menuItemLimit);\r\n      }\r\n\r\n      this.current.filteredItems = items;\r\n\r\n      let ul = this.menu.querySelector(\"ul\");\r\n\r\n      this.range.positionMenuAtCaret(scrollTo);\r\n\r\n      if (!items.length) {\r\n        let noMatchEvent = new CustomEvent(\"tribute-no-match\", {\r\n          detail: this.menu\r\n        });\r\n        this.current.element.dispatchEvent(noMatchEvent);\r\n        if (\r\n          (typeof this.current.collection.noMatchTemplate === \"function\" &&\r\n            !this.current.collection.noMatchTemplate()) ||\r\n          !this.current.collection.noMatchTemplate\r\n        ) {\r\n          this.hideMenu();\r\n        } else {\r\n          typeof this.current.collection.noMatchTemplate === \"function\"\r\n            ? (ul.innerHTML = this.current.collection.noMatchTemplate())\r\n            : (ul.innerHTML = this.current.collection.noMatchTemplate);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      ul.innerHTML = \"\";\r\n      let fragment = this.range.getDocument().createDocumentFragment();\r\n\r\n      items.forEach((item, index) => {\r\n        let li = this.range.getDocument().createElement(\"li\");\r\n        li.setAttribute(\"data-index\", index);\r\n        li.className = this.current.collection.itemClass;\r\n        li.addEventListener(\"mousemove\", e => {\r\n          let [li, index] = this._findLiTarget(e.target);\r\n          if (e.movementY !== 0) {\r\n            this.events.setActiveLi(index);\r\n          }\r\n        });\r\n        if (this.menuSelected === index) {\r\n          li.classList.add(this.current.collection.selectClass);\r\n        }\r\n        li.innerHTML = this.current.collection.menuItemTemplate(item);\r\n        fragment.appendChild(li);\r\n      });\r\n      ul.appendChild(fragment);\r\n    };\r\n\r\n    if (typeof this.current.collection.values === \"function\") {\r\n      if (this.current.collection.loadingItemTemplate) {\r\n        this.menu.querySelector(\"ul\").innerHTML = this.current.collection.loadingItemTemplate;\r\n        this.range.positionMenuAtCaret(scrollTo);\r\n      }\r\n\r\n      this.current.collection.values(this.current.mentionText, processValues);\r\n    } else {\r\n      processValues(this.current.collection.values);\r\n    }\r\n  }\r\n\r\n  _findLiTarget(el) {\r\n    if (!el) return [];\r\n    const index = el.getAttribute(\"data-index\");\r\n    return !index ? this._findLiTarget(el.parentNode) : [el, index];\r\n  }\r\n\r\n  showMenuForCollection(element, collectionIndex) {\r\n    if (element !== document.activeElement) {\r\n      this.placeCaretAtEnd(element);\r\n    }\r\n\r\n    this.current.collection = this.collection[collectionIndex || 0];\r\n    this.current.externalTrigger = true;\r\n    this.current.element = element;\r\n\r\n    if (element.isContentEditable)\r\n      this.insertTextAtCursor(this.current.collection.trigger);\r\n    else this.insertAtCaret(element, this.current.collection.trigger);\r\n\r\n    this.showMenuFor(element);\r\n  }\r\n\r\n  // TODO: make sure this works for inputs/textareas\r\n  placeCaretAtEnd(el) {\r\n    el.focus();\r\n    if (\r\n      typeof window.getSelection != \"undefined\" &&\r\n      typeof document.createRange != \"undefined\"\r\n    ) {\r\n      var range = document.createRange();\r\n      range.selectNodeContents(el);\r\n      range.collapse(false);\r\n      var sel = window.getSelection();\r\n      sel.removeAllRanges();\r\n      sel.addRange(range);\r\n    } else if (typeof document.body.createTextRange != \"undefined\") {\r\n      var textRange = document.body.createTextRange();\r\n      textRange.moveToElementText(el);\r\n      textRange.collapse(false);\r\n      textRange.select();\r\n    }\r\n  }\r\n\r\n  // for contenteditable\r\n  insertTextAtCursor(text) {\r\n    var sel, range, html;\r\n    sel = window.getSelection();\r\n    range = sel.getRangeAt(0);\r\n    range.deleteContents();\r\n    var textNode = document.createTextNode(text);\r\n    range.insertNode(textNode);\r\n    range.selectNodeContents(textNode);\r\n    range.collapse(false);\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n  }\r\n\r\n  // for regular inputs\r\n  insertAtCaret(textarea, text) {\r\n    var scrollPos = textarea.scrollTop;\r\n    var caretPos = textarea.selectionStart;\r\n\r\n    var front = textarea.value.substring(0, caretPos);\r\n    var back = textarea.value.substring(\r\n      textarea.selectionEnd,\r\n      textarea.value.length\r\n    );\r\n    textarea.value = front + text + back;\r\n    caretPos = caretPos + text.length;\r\n    textarea.selectionStart = caretPos;\r\n    textarea.selectionEnd = caretPos;\r\n    textarea.focus();\r\n    textarea.scrollTop = scrollPos;\r\n  }\r\n\r\n  hideMenu() {\r\n    if (this.menu) {\r\n      this.menu.style.cssText = \"display: none;\";\r\n      this.isActive = false;\r\n      this.menuSelected = 0;\r\n      this.current = {};\r\n    }\r\n  }\r\n\r\n  selectItemAtIndex(index, originalEvent) {\r\n    index = parseInt(index);\r\n    if (typeof index !== \"number\" || isNaN(index)) return;\r\n    let item = this.current.filteredItems[index];\r\n    let content = this.current.collection.selectTemplate(item);\r\n    if (content !== null) this.replaceText(content, originalEvent, item);\r\n  }\r\n\r\n  replaceText(content, originalEvent, item) {\r\n    this.range.replaceTriggerText(content, true, true, originalEvent, item);\r\n  }\r\n\r\n  _append(collection, newValues, replace) {\r\n    if (typeof collection.values === \"function\") {\r\n      throw new Error(\"Unable to append to values, as it is a function.\");\r\n    } else if (!replace) {\r\n      collection.values = collection.values.concat(newValues);\r\n    } else {\r\n      collection.values = newValues;\r\n    }\r\n  }\r\n\r\n  append(collectionIndex, newValues, replace) {\r\n    let index = parseInt(collectionIndex);\r\n    if (typeof index !== \"number\")\r\n      throw new Error(\"please provide an index for the collection to update.\");\r\n\r\n    let collection = this.collection[index];\r\n\r\n    this._append(collection, newValues, replace);\r\n  }\r\n\r\n  appendCurrent(newValues, replace) {\r\n    if (this.isActive) {\r\n      this._append(this.current.collection, newValues, replace);\r\n    } else {\r\n      throw new Error(\r\n        \"No active state. Please use append instead and pass an index.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  detach(el) {\r\n    if (!el) {\r\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\r\n    }\r\n\r\n    // Check if it is a jQuery collection\r\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\r\n      el = el.get();\r\n    }\r\n\r\n    // Is el an Array/Array-like object?\r\n    if (\r\n      el.constructor === NodeList ||\r\n      el.constructor === HTMLCollection ||\r\n      el.constructor === Array\r\n    ) {\r\n      let length = el.length;\r\n      for (var i = 0; i < length; ++i) {\r\n        this._detach(el[i]);\r\n      }\r\n    } else {\r\n      this._detach(el);\r\n    }\r\n  }\r\n\r\n  _detach(el) {\r\n    this.events.unbind(el);\r\n    if (el.tributeMenu) {\r\n      this.menuEvents.unbind(el.tributeMenu);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      el.removeAttribute(\"data-tribute\");\r\n      this.isActive = false;\r\n      if (el.tributeMenu) {\r\n        el.tributeMenu.remove();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default Tribute;\r\n"],"names":["Array","prototype","find","predicate","this","TypeError","value","list","Object","length","thisArg","arguments","i","call","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","Event","TributeEvents","tribute","events","element","boundKeydown","keydown","bind","boundKeyup","keyup","boundInput","input","addEventListener","removeEventListener","instance","shouldDeactivate","isActive","hideMenu","commandEvent","keys","forEach","o","key","keyCode","callbacks","toLowerCase","inputEvent","menu","contains","target","li","preventDefault","stopPropagation","nodeName","parentNode","Error","selectItemAtIndex","getAttribute","current","externalTrigger","setTimeout","updateSelection","allowSpaces","hasTrailingSpace","autocompleteMode","triggerChar","getKeyCode","isNaN","trigger","triggers","charCodeAt","mentionText","collection","menuShowMinLength","showMenuFor","eventKeyPressed","el","info","range","getTriggerInfo","mentionTriggerChar","selectedPath","mentionSelectedPath","selectedOffset","mentionSelectedOffset","e","_this","collectionItem","item","enter","filteredItems","menuSelected","escape","tab","space","spaceSelectsMatch","up","count","selected","setActiveLi","scrollTop","scrollHeight","down","index","lis","querySelectorAll","parseInt","classList","add","selectClass","liClientRect","getBoundingClientRect","menuClientRect","bottom","scrollDistance","top","remove","elem","includeMargin","height","style","currentStyle","getComputedStyle","parseFloat","marginTop","marginBottom","TributeMenuEvents","menuEvents","menuClickEvent","click","menuContainerScrollEvent","debounce","windowResizeEvent","positionMenuAtCaret","getDocument","menuContainer","func","wait","immediate","timeout","context","_this2","args","callNow","clearTimeout","apply","TributeRange","iframe","contentWindow","scrollTo","coordinates","positionMenu","cssText","isContentEditable","getContentEditableCaretPosition","mentionPosition","getTextAreaOrInputUnderlinePosition","left","right","scrollIntoView","menuDimensions","width","offsetWidth","offsetHeight","menuIsOffScreen","isMenuOffScreen","menuIsOffScreenHorizontally","innerWidth","menuIsOffScreenVertically","innerHeight","targetElement","path","offset","childNodes","nextSibling","previousSibling","sel","getWindowSelection","createRange","setStart","setEnd","collapse","removeAllRanges","error","addRange","focus","text","requireLeadingSpace","originalEvent","replaceEvent","replaceTextSuffix","endPos","pasteHtml","myField","textSuffix","startPos","substring","selectionStart","selectionEnd","dispatchEvent","html","anchorNode","deleteContents","createElement","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","appendChild","insertNode","cloneRange","setStartAfter","getSelection","ctx","ce","contentEditable","getNodePositionInParent","push","reverse","getRangeAt","startOffset","selectedElem","workingNodeContent","textContent","selectStartOffset","textComponent","wordsArray","autocompleteSeparator","split","menuAlreadyActive","isAutocomplete","selectionInfo","getContentEditableSelectedPath","effectiveRange","getTextPrecedingCurrentSelection","lastWordOfEffectiveRange","getLastWordInText","mentionSelectedElement","mostRecentTriggerCharPos","config","c","idx","lastIndexWithLeadingSpace","lastIndexOf","test","currentTriggerSnippet","firstSnippetChar","leadingSpace","trim","regex","str","reversedStr","join","cidx","len","firstChar","match","triggerIdx","windowWidth","windowHeight","doc","documentElement","windowLeft","pageXOffset","scrollLeft","clientLeft","windowTop","pageYOffset","clientTop","menuTop","menuRight","menuBottom","menuLeft","Math","floor","ceil","dimensions","position","flipped","isFirefox","mozInnerScreenX","div","id","body","computed","whiteSpace","wordWrap","visibility","prop","overflowY","overflow","replace","span","rect","menuContainerIsBody","offsetTop","borderTopWidth","fontSize","offsetLeft","borderLeftWidth","getMenuDimensions","parentHeight","scrollStillAvailable","removeChild","selectedNodePosition","clientRect","elemTop","elemBottom","maxY","targetY","TributeSearch","search","pattern","array","filter","string","opts","pre","post","compareString","caseSensitive","skip","rendered","score","patternCache","traverse","render","cache","stringIndex","patternIndex","splice","calculateScore","slice","best","temp","indexOf","pop","indices","arr","reduce","prev","extract","original","sort","a","b","compare","t","values","loadingItemTemplate","containerClass","itemClass","selectTemplate","menuItemTemplate","lookup","fillAttr","noMatchTemplate","searchOpts","menuItemLimit","Tribute","defaultSelectTemplate","defaultMenuItemTemplate","console","warn","map","jQuery","get","constructor","NodeList","HTMLCollection","_attach","hasAttribute","ensureEditable","setAttribute","inputTypes","wrapper","ul","className","currentMentionTextSnapshot","createMenu","tributeMenu","processValues","items","querySelector","noMatchEvent","fragment","_findLiTarget","movementY","collectionIndex","activeElement","placeCaretAtEnd","insertTextAtCursor","insertAtCaret","selectNodeContents","createTextRange","textRange","moveToElementText","select","textNode","createTextNode","textarea","scrollPos","caretPos","front","back","content","replaceText","replaceTriggerText","newValues","concat","_append","_detach","unbind","removeAttribute","_this3","_isActive","val","matchItem"],"mappings":"k8CAuBA,GAvBKA,MAAMC,UAAUC,OACjBF,MAAMC,UAAUC,KAAO,SAASC,MACf,OAATC,WACM,IAAIC,UAAU,uDAEC,mBAAdF,QACD,IAAIE,UAAU,wCAKpBC,EAHAC,EAAOC,OAAOJ,MACdK,EAASF,EAAKE,SAAW,EACzBC,EAAUC,UAAU,GAGfC,EAAI,EAAGA,EAAIH,EAAQG,OACxBN,EAAQC,EAAKK,GACTT,EAAUU,KAAKH,EAASJ,EAAOM,EAAGL,UAC3BD,IAOD,oBAAXQ,QAAwD,mBAAvBA,OAAOC,YAA4B,KACpEA,EAAT,SAAqBC,EAAOC,GAC1BA,EAASA,GAAU,CACjBC,SAAS,EACTC,YAAY,EACZC,YAAQC,OAENC,EAAMC,SAASC,YAAY,sBAC/BF,EAAIG,gBAAgBT,EAAOC,EAAOC,QAASD,EAAOE,WAAYF,EAAOG,QAC9DE,QAGkB,IAAjBR,OAAOY,QAChBX,EAAYd,UAAYa,OAAOY,MAAMzB,WAGtCa,OAAOC,YAAcA,MCvCjBY,wBACQC,kBACLA,QAAUA,OACVA,QAAQC,OAASzB,4CAoCnB0B,GACHA,EAAQC,aAAe3B,KAAK4B,QAAQC,KAAKH,EAAS1B,MAClD0B,EAAQI,WAAa9B,KAAK+B,MAAMF,KAAKH,EAAS1B,MAC9C0B,EAAQM,WAAahC,KAAKiC,MAAMJ,KAAKH,EAAS1B,MAE9C0B,EAAQQ,iBAAiB,UAAWR,EAAQC,cAAc,GAC1DD,EAAQQ,iBAAiB,QAASR,EAAQI,YAAY,GACtDJ,EAAQQ,iBAAiB,QAASR,EAAQM,YAAY,kCAGjDN,GACLA,EAAQS,oBAAoB,UAAWT,EAAQC,cAAc,GAC7DD,EAAQS,oBAAoB,QAAST,EAAQI,YAAY,GACzDJ,EAAQS,oBAAoB,QAAST,EAAQM,YAAY,UAElDN,EAAQC,oBACRD,EAAQI,kBACRJ,EAAQM,2CAGTI,EAAUxB,GACZwB,EAASC,iBAAiBzB,KAC5BwB,EAASZ,QAAQc,UAAW,EAC5BF,EAASZ,QAAQe,gBAGfb,EAAU1B,KACdoC,EAASI,cAAe,EAExBjB,EAAckB,OAAOC,SAAQ,SAAAC,GACvBA,EAAEC,MAAQhC,EAAMiC,UAClBT,EAASI,cAAe,EACxBJ,EAASU,YAAYH,EAAEzC,MAAM6C,eAAenC,EAAOc,qCAKnDU,EAAUxB,GACdwB,EAASY,YAAa,EACtBZ,EAASL,MAAMtB,KAAKT,KAAMoC,EAAUxB,iCAGhCwB,EAAUxB,OACVY,EAAUY,EAASZ,WACnBA,EAAQyB,MAAQzB,EAAQyB,KAAKC,SAAStC,EAAMuC,QAAS,KACnDC,EAAKxC,EAAMuC,WACfvC,EAAMyC,iBACNzC,EAAM0C,kBAC+B,OAA9BF,EAAGG,SAASR,oBACjBK,EAAKA,EAAGI,aACGJ,IAAO5B,EAAQyB,WAClB,IAAIQ,MAAM,gDAGpBjC,EAAQkC,kBAAkBN,EAAGO,aAAa,cAAe/C,GACzDY,EAAQe,gBAGCf,EAAQoC,QAAQlC,UAAYF,EAAQoC,QAAQC,kBACrDrC,EAAQoC,QAAQC,iBAAkB,EAClCC,YAAW,kBAAMtC,EAAQe,6CAIvBH,EAAUxB,MACVwB,EAASY,aACXZ,EAASY,YAAa,GAExBZ,EAAS2B,gBAAgB/D,MAEH,KAAlBY,EAAMiC,aAELT,EAASZ,QAAQwC,aAAe5B,EAASZ,QAAQyC,wBACpD7B,EAASZ,QAAQyC,kBAAmB,EACpC7B,EAASI,cAAe,OACxBJ,EAASU,YAAT,MAA8BlC,EAAOZ,UAIlCoC,EAASZ,QAAQc,YAChBF,EAASZ,QAAQ0C,iBACnB9B,EAASU,YAAYqB,YAAYvD,EAAOZ,KAAM,QACzC,KACD6C,EAAUT,EAASgC,WAAWhC,EAAUpC,KAAMY,MAE9CyD,MAAMxB,KAAaA,EAAS,WAE5ByB,EAAUlC,EAASZ,QAAQ+C,WAAWzE,MAAK,SAAAwE,UACtCA,EAAQE,WAAW,KAAO3B,UAGZ,IAAZyB,GACTlC,EAASU,YAAYqB,YAAYvD,EAAOZ,KAAMsE,GAMlDlC,EAASZ,QAAQoC,QAAQa,YAAYpE,OACrC+B,EAASZ,QAAQoC,QAAQc,WAAWC,qBAMlCvC,EAASZ,QAAQoC,QAAQU,SACzBlC,EAASZ,QAAQ0C,oBACS,IAA1B9B,EAASI,cACVJ,EAASZ,QAAQc,UAA8B,IAAlB1B,EAAMiC,UAEpCT,EAASZ,QAAQoD,YAAY5E,MAAM,6CAItBY,OACVZ,KAAKwB,QAAQc,SAAU,OAAO,KAEa,IAA5CtC,KAAKwB,QAAQoC,QAAQa,YAAYpE,OAAc,KAC7CwE,GAAkB,SACtBtD,EAAckB,OAAOC,SAAQ,SAAAC,GACvB/B,EAAMiC,UAAYF,EAAEC,MAAKiC,GAAkB,OAGzCA,SAGH,qCAGEzC,EAAU0C,EAAIlE,OAEnBY,EAAUY,EAASZ,QACnBuD,EAAOvD,EAAQwD,MAAMC,gBACvB,EACAzD,EAAQyC,kBACR,EACAzC,EAAQwC,YACRxC,EAAQ0C,0BAGNa,GACKA,EAAKG,mBAAmBV,WAAW,2CAM9BM,QACTtD,QAAQoC,QAAQlC,QAAUoD,MAC3BC,EAAO/E,KAAKwB,QAAQwD,MAAMC,gBAC5B,EACAjF,KAAKwB,QAAQyC,kBACb,EACAjE,KAAKwB,QAAQwC,YACbhE,KAAKwB,QAAQ0C,kBAGXa,SACGvD,QAAQoC,QAAQuB,aAAeJ,EAAKK,yBACpC5D,QAAQoC,QAAQa,YAAcM,EAAKN,iBACnCjD,QAAQoC,QAAQyB,eAAiBN,EAAKO,4EAKtC,CACLnB,YAAa,SAACoB,EAAGT,EAAIR,OACf9C,EAAUgE,EAAKhE,QACnBA,EAAQoC,QAAQU,QAAUA,MAEtBmB,EAAiBjE,EAAQkD,WAAW5E,MAAK,SAAA4F,UACpCA,EAAKpB,UAAYA,KAG1B9C,EAAQoC,QAAQc,WAAae,EAG3BjE,EAAQoC,QAAQa,YAAYpE,QAC1BmB,EAAQoC,QAAQc,WAAWC,mBAC7BnD,EAAQwB,YAERxB,EAAQoD,YAAYE,GAAI,IAG5Ba,MAAO,SAACJ,EAAGT,GAELU,EAAKhE,QAAQc,UAAYkD,EAAKhE,QAAQoC,QAAQgC,gBAChDL,EAAElC,iBACFkC,EAAEjC,kBACFQ,YAAW,WACT0B,EAAKhE,QAAQkC,kBAAkB8B,EAAKhE,QAAQqE,aAAcN,GAC1DC,EAAKhE,QAAQe,aACZ,KAGPuD,OAAQ,SAACP,EAAGT,GACNU,EAAKhE,QAAQc,WACfiD,EAAElC,iBACFkC,EAAEjC,kBACFkC,EAAKhE,QAAQc,UAAW,EACxBkD,EAAKhE,QAAQe,aAGjBwD,IAAK,SAACR,EAAGT,GAEPU,EAAK1C,YAAY6C,MAAMJ,EAAGT,IAE5BkB,MAAO,SAACT,EAAGT,GACLU,EAAKhE,QAAQc,WACXkD,EAAKhE,QAAQyE,kBACfT,EAAK1C,YAAY6C,MAAMJ,EAAGT,GAChBU,EAAKhE,QAAQwC,cACvBuB,EAAEjC,kBACFQ,YAAW,WACT0B,EAAKhE,QAAQe,WACbiD,EAAKhE,QAAQc,UAAW,IACvB,MAIT4D,GAAI,SAACX,EAAGT,MAEFU,EAAKhE,QAAQc,UAAYkD,EAAKhE,QAAQoC,QAAQgC,cAAe,CAC/DL,EAAElC,iBACFkC,EAAEjC,sBACE6C,EAAQX,EAAKhE,QAAQoC,QAAQgC,cAAcvF,OAC7C+F,EAAWZ,EAAKhE,QAAQqE,aAEtBM,EAAQC,GAAYA,EAAW,GACjCZ,EAAKhE,QAAQqE,eACbL,EAAKa,eACiB,IAAbD,IACTZ,EAAKhE,QAAQqE,aAAeM,EAAQ,EACpCX,EAAKa,cACLb,EAAKhE,QAAQyB,KAAKqD,UAAYd,EAAKhE,QAAQyB,KAAKsD,gBAItDC,KAAM,SAACjB,EAAGT,MAEJU,EAAKhE,QAAQc,UAAYkD,EAAKhE,QAAQoC,QAAQgC,cAAe,CAC/DL,EAAElC,iBACFkC,EAAEjC,sBACE6C,EAAQX,EAAKhE,QAAQoC,QAAQgC,cAAcvF,OAAS,EACtD+F,EAAWZ,EAAKhE,QAAQqE,aAEtBM,EAAQC,GACVZ,EAAKhE,QAAQqE,eACbL,EAAKa,eACIF,IAAUC,IACnBZ,EAAKhE,QAAQqE,aAAe,EAC5BL,EAAKa,cACLb,EAAKhE,QAAQyB,KAAKqD,UAAY,YAI5B,SAACf,EAAGT,GAERU,EAAKhE,QAAQc,UACbkD,EAAKhE,QAAQoC,QAAQa,YAAYpE,OAAS,EAE1CmF,EAAKhE,QAAQe,WACJiD,EAAKhE,QAAQc,UACtBkD,EAAKhE,QAAQoD,YAAYE,yCAMrB2B,OACNC,EAAM1G,KAAKwB,QAAQyB,KAAK0D,iBAAiB,MAC3CtG,EAASqG,EAAIrG,SAAW,EAEtBoG,IAAOzG,KAAKwB,QAAQqE,aAAee,SAASH,QAE3C,IAAIjG,EAAI,EAAGA,EAAIH,EAAQG,IAAK,KAC3B4C,EAAKsD,EAAIlG,MACTA,IAAMR,KAAKwB,QAAQqE,aAAc,CACnCzC,EAAGyD,UAAUC,IAAI9G,KAAKwB,QAAQoC,QAAQc,WAAWqC,iBAE7CC,EAAe5D,EAAG6D,wBAClBC,EAAiBlH,KAAKwB,QAAQyB,KAAKgE,2BAEnCD,EAAaG,OAASD,EAAeC,OAAQ,KAC3CC,EAAiBJ,EAAaG,OAASD,EAAeC,YACrD3F,QAAQyB,KAAKqD,WAAac,OAC1B,GAAIJ,EAAaK,IAAMH,EAAeG,IAAK,KAC5CD,EAAiBF,EAAeG,IAAML,EAAaK,SAClD7F,QAAQyB,KAAKqD,WAAac,QAGjChE,EAAGyD,UAAUS,OAAOtH,KAAKwB,QAAQoC,QAAQc,WAAWqC,oDAK5CQ,EAAMC,OACdC,EAASF,EAAKN,wBAAwBQ,UAEtCD,EAAe,KACbE,EAAQH,EAAKI,cAAgBjH,OAAOkH,iBAAiBL,UAEvDE,EAASI,WAAWH,EAAMI,WAAaD,WAAWH,EAAMK,qBAIrDN,yCAlVA,CACL,CACE7E,IAAK,EACL1C,MAAO,OAET,CACE0C,IAAK,EACL1C,MAAO,UAET,CACE0C,IAAK,GACL1C,MAAO,SAET,CACE0C,IAAK,GACL1C,MAAO,UAET,CACE0C,IAAK,GACL1C,MAAO,SAET,CACE0C,IAAK,GACL1C,MAAO,MAET,CACE0C,IAAK,GACL1C,MAAO,kBClCT8H,wBACQxG,kBACLA,QAAUA,OACVA,QAAQyG,WAAajI,UACrBiD,KAAOjD,KAAKwB,QAAQyB,4CAGtBA,mBACEiF,eAAiBlI,KAAKwB,QAAQC,OAAO0G,MAAMtG,KAAK,KAAM7B,WACtDoI,yBAA2BpI,KAAKqI,UACnC,WACM7C,EAAKhE,QAAQc,UACfkD,EAAKhE,QAAQoD,YAAYY,EAAKhE,QAAQoC,QAAQlC,SAAS,KAG3D,KACA,QAEG4G,kBAAoBtI,KAAKqI,UAC5B,WACM7C,EAAKhE,QAAQc,UACfkD,EAAKhE,QAAQwD,MAAMuD,qBAAoB,KAG3C,KACA,QAIG/G,QAAQwD,MACVwD,cACAtG,iBAAiB,gBAAiBlC,KAAKkI,gBAAgB,QACrD1G,QAAQwD,MACVwD,cACAtG,iBAAiB,YAAalC,KAAKkI,gBAAgB,GACtDxH,OAAOwB,iBAAiB,SAAUlC,KAAKsI,mBAEnCtI,KAAKyI,mBACFA,cAAcvG,iBACjB,SACAlC,KAAKoI,0BACL,GAGF1H,OAAOwB,iBAAiB,SAAUlC,KAAKoI,yDAIpCnF,QACAzB,QAAQwD,MACVwD,cACArG,oBAAoB,YAAanC,KAAKkI,gBAAgB,QACpD1G,QAAQwD,MACVwD,cACArG,oBAAoB,gBAAiBnC,KAAKkI,gBAAgB,GAC7DxH,OAAOyB,oBAAoB,SAAUnC,KAAKsI,mBAEtCtI,KAAKyI,mBACFA,cAActG,oBACjB,SACAnC,KAAKoI,0BACL,GAGF1H,OAAOyB,oBAAoB,SAAUnC,KAAKoI,2DAIrCM,EAAMC,EAAMC,OACfC,4BACG,eACDC,EAAUC,EACZC,EAAOzI,EAKL0I,EAAUL,IAAcC,EAC5BK,aAAaL,GACbA,EAAU/E,YANE,WACV+E,EAAU,KACLD,GAAWF,EAAKS,MAAML,EAASE,KAIVL,GACxBM,GAASP,EAAKS,MAAML,EAASE,aC7EjCI,wBACU5H,kBACHA,QAAUA,OACVA,QAAQwD,MAAQhF,yDAIjBqJ,SACArJ,KAAKwB,QAAQoC,QAAQc,aACrB2E,EAASrJ,KAAKwB,QAAQoC,QAAQc,WAAW2E,QAGxCA,EAIEA,EAAOC,cAAcnI,SAHjBA,qDAMKoI,OAEZC,SADAV,EAAU9I,KAAKwB,QAAQoC,QAGvBmB,EAAO/E,KAAKiF,gBAAe,EAAOjF,KAAKwB,QAAQyC,kBAAkB,EAAMjE,KAAKwB,QAAQwC,YAAahE,KAAKwB,QAAQ0C,0BAE9F,IAATa,EAAsB,KAEzB/E,KAAKwB,QAAQiI,8BACRjI,QAAQyB,KAAKyE,MAAMgC,2BASxBF,EALCxJ,KAAK2J,kBAAkBb,EAAQpH,SAKlB1B,KAAK4J,gCAAgC7E,EAAK8E,iBAJ1C7J,KAAK8J,oCAAoC9J,KAAKwB,QAAQoC,QAAQlC,QACxEqD,EAAK8E,sBAMRrI,QAAQyB,KAAKyE,MAAMgC,uBAAkBF,EAAYnC,+DACrBmC,EAAYO,iEACXP,EAAYQ,mEACXR,EAAYrC,8HAItB,SAArBqC,EAAYO,YACPvI,QAAQyB,KAAKyE,MAAMqC,KAAO,QAGX,SAApBP,EAAYnC,WACP7F,QAAQyB,KAAKyE,MAAML,IAAM,QAG9BkC,GAAUvJ,KAAKiK,iBAEnBvJ,OAAOoD,YAAW,eACVoG,EAAiB,CAClBC,MAAO3E,EAAKhE,QAAQyB,KAAKmH,YACzB3C,OAAQjC,EAAKhE,QAAQyB,KAAKoH,cAEzBC,EAAkB9E,EAAK+E,gBAAgBf,EAAaU,GAEpDM,EAA8B9J,OAAO+J,WAAaP,EAAeC,QAAUG,EAAgBP,MAAQO,EAAgBN,OACnHU,EAA4BhK,OAAOiK,YAAcT,EAAezC,SAAW6C,EAAgBjD,KAAOiD,EAAgBnD,SAClHqD,GAA+BE,KAC/BlF,EAAKhE,QAAQyB,KAAKyE,MAAMgC,QAAU,gBAClClE,EAAK+C,oBAAoBgB,MAE9B,aAGE/H,QAAQyB,KAAKyE,MAAMgC,QAAU,sDAS5BkB,EAAeC,EAAMC,OAC3B9F,EACAuC,EAAOqD,KAEPC,MACK,IAAIrK,EAAI,EAAGA,EAAIqK,EAAKxK,OAAQG,IAAK,SAErBS,KADbsG,EAAOA,EAAKwD,WAAWF,EAAKrK,iBAIrB+G,EAAKlH,OAASyK,GACjBA,GAAUvD,EAAKlH,OACfkH,EAAOA,EAAKyD,YAEe,IAA3BzD,EAAKwD,WAAW1K,QAAiBkH,EAAKlH,SACtCkH,EAAOA,EAAK0D,qBAIpBC,EAAMlL,KAAKmL,sBAEfnG,EAAQhF,KAAKwI,cAAc4C,eACrBC,SAAS9D,EAAMuD,GACrB9F,EAAMsG,OAAO/D,EAAMuD,GACnB9F,EAAMuG,UAAS,OAGXL,EAAIM,kBACN,MAAOC,IAETP,EAAIQ,SAAS1G,GACb4F,EAAce,mDAGCC,EAAMC,EAAqB5H,EAAkB6H,EAAepG,OACvEX,EAAO/E,KAAKiF,gBAAe,EAAMhB,EAAkB4H,EAAqB7L,KAAKwB,QAAQwC,YAAahE,KAAKwB,QAAQ0C,0BAEtGjD,IAAT8D,EAAoB,KAChB+D,EAAU9I,KAAKwB,QAAQoC,QACvBmI,EAAe,IAAIpL,YAAY,mBAAoB,CACnDK,OAAQ,CACJ0E,KAAMA,EACNtD,SAAU0G,EACVA,QAAS/D,EACTnE,MAAOkL,QAIV9L,KAAK2J,kBAAkBb,EAAQpH,SAe7B,CAKHkK,GAH0D,iBAAlC5L,KAAKwB,QAAQwK,kBAC/BhM,KAAKwB,QAAQwK,kBACb,QAEFC,EAASlH,EAAK8E,gBAAkB9E,EAAKN,YAAYpE,OAChDL,KAAKwB,QAAQ0C,mBACd+H,GAAUlH,EAAKG,mBAAmB7E,aAEjC6L,UAAUN,EAAM7G,EAAK8E,gBAAiBoC,OAzBD,KACtCE,EAAUnM,KAAKwB,QAAQoC,QAAQlC,QAC/B0K,EAAsD,iBAAlCpM,KAAKwB,QAAQwK,kBAC/BhM,KAAKwB,QAAQwK,kBACb,IACNJ,GAAQQ,MACJC,EAAWtH,EAAK8E,gBAChBoC,EAASlH,EAAK8E,gBAAkB9E,EAAKN,YAAYpE,OAAS+L,EAAW/L,OACpEL,KAAKwB,QAAQ0C,mBACd+H,GAAUlH,EAAKG,mBAAmB7E,OAAS,GAE/C8L,EAAQjM,MAAQiM,EAAQjM,MAAMoM,UAAU,EAAGD,GAAYT,EACnDO,EAAQjM,MAAMoM,UAAUL,EAAQE,EAAQjM,MAAMG,QAClD8L,EAAQI,eAAiBF,EAAWT,EAAKvL,OACzC8L,EAAQK,aAAeH,EAAWT,EAAKvL,OAc3CyI,EAAQpH,QAAQ+K,cAAc,IAAI9L,YAAY,QAAS,CAAEG,SAAS,KAClEgI,EAAQpH,QAAQ+K,cAAcV,sCAI5BW,EAAML,EAAUJ,OAClBjH,EAAOkG,EACXA,EAAMlL,KAAKmL,sBACXnG,EAAQhF,KAAKwI,cAAc4C,eACrBC,SAASH,EAAIyB,WAAYN,GAC/BrH,EAAMsG,OAAOJ,EAAIyB,WAAYV,GAC7BjH,EAAM4H,qBAEF9H,EAAK9E,KAAKwI,cAAcqE,cAAc,OAC1C/H,EAAGgI,UAAYJ,UAEXK,EAAMC,EADNC,EAAOjN,KAAKwI,cAAc0E,yBAEtBH,EAAOjI,EAAGqI,YACdH,EAAWC,EAAKG,YAAYL,GAEhC/H,EAAMqI,WAAWJ,GAGbD,KACAhI,EAAQA,EAAMsI,cACRC,cAAcP,GACpBhI,EAAMuG,UAAS,GACfL,EAAIM,kBACJN,EAAIQ,SAAS1G,wDAKbhF,KAAKwB,QAAQkD,WAAW2E,OACjBrJ,KAAKwB,QAAQkD,WAAW2E,OAAOC,cAAckE,eAGjD9M,OAAO8M,+DAGM9L,MACO,OAAvBA,EAAQ8B,kBACD,MAGN,IAAIhD,EAAI,EAAGA,EAAIkB,EAAQ8B,WAAWuH,WAAW1K,OAAQG,IAAK,IAChDkB,EAAQ8B,WAAWuH,WAAWvK,KAE5BkB,SACFlB,0DAKYiN,OACvBvC,EAAMlL,KAAKmL,qBACX/E,EAAW8E,EAAIyB,WACf9B,EAAO,MAGK,MAAZzE,EAAkB,SACd5F,EACAkN,EAAKtH,EAASuH,gBACE,OAAbvH,GAA4B,SAAPsH,GACxBlN,EAAIR,KAAK4N,wBAAwBxH,GACjCyE,EAAKgD,KAAKrN,GAEO,QADjB4F,EAAWA,EAAS5C,cAEhBkK,EAAKtH,EAASuH,wBAGtB9C,EAAKiD,UAKE,CACH1H,SAAUA,EACVyE,KAAMA,EACNC,OALKI,EAAI6C,WAAW,GAAGC,6EAW3BlF,EAAU9I,KAAKwB,QAAQoC,QACvBgI,EAAO,MAEN5L,KAAK2J,kBAAkBb,EAAQpH,SAS7B,KACCuM,EAAejO,KAAKmL,qBAAqBwB,cAEzB,MAAhBsB,EAAsB,KAClBC,EAAqBD,EAAaE,YAClCC,EAAoBpO,KAAKmL,qBAAqB4C,WAAW,GAAGC,YAE5DE,GAAsBE,GAAqB,IAC3CxC,EAAOsC,EAAmB5B,UAAU,EAAG8B,SAjBL,KACtCC,EAAgBrO,KAAKwB,QAAQoC,QAAQlC,WACrC2M,EAAe,KACXhC,EAAWgC,EAAc9B,eACzB8B,EAAcnO,OAASmM,GAAY,IACnCT,EAAOyC,EAAcnO,MAAMoM,UAAU,EAAGD,YAiB7CT,4CAGOA,OACV0C,SAEAA,EADAtO,KAAKwB,QAAQ+M,sBACA3C,EAAK4C,MAAMxO,KAAKwB,QAAQ+M,uBAExB3C,EAAK4C,MAAM,QAEXF,EAAWjO,OAAS,0CAI1BoO,EAAmBxK,EAAkB4H,EAAqB7H,EAAa0K,OAE9EtI,EAAUyE,EAAMC,SADhB2C,EAAMzN,KAAKwB,QAAQoC,WAGlB5D,KAAK2J,kBAAkB8D,EAAI/L,SAEzB,KACCiN,EAAgB3O,KAAK4O,+BAA+BnB,GAEpDkB,IACAvI,EAAWuI,EAAcvI,SACzByE,EAAO8D,EAAc9D,KACrBC,EAAS6D,EAAc7D,aAP3B1E,EAAWpG,KAAKwB,QAAQoC,QAAQlC,YAWhCmN,EAAiB7O,KAAK8O,mCACtBC,EAA2B/O,KAAKgP,kBAAkBH,MAElDH,QACO,CACH7E,gBAAiBgF,EAAexO,OAAS0O,EAAyB1O,OAClEoE,YAAasK,EACbE,uBAAwB7I,EACxBhB,oBAAqByF,EACrBvF,sBAAuBwF,MAI3B+D,MAAAA,EAAyD,KAErD1K,EADA+K,GAA4B,UAG3B1N,QAAQkD,WAAWhC,SAAQ,SAAAyM,OACxBC,EAAID,EAAO7K,QACX+K,EAAMF,EAAOtD,oBACb9C,EAAKuG,0BAA0BT,EAAgBO,GAC/CP,EAAeU,YAAYH,GAE3BC,EAAMH,IACNA,EAA2BG,EAC3BlL,EAAciL,EACdvD,EAAsBsD,EAAOtD,wBAIjCqD,GAA4B,IAEK,IAA7BA,IACCrD,GACD,KAAK2D,KACDX,EAAevC,UACX4C,EAA2B,EAC3BA,KAGd,KACMO,EAAwBZ,EAAevC,UAAU4C,EAA2B/K,EAAY9D,OACxFwO,EAAexO,QAEnB8D,EAAc0K,EAAevC,UAAU4C,EAA0BA,EAA2B/K,EAAY9D,YACpGqP,EAAmBD,EAAsBnD,UAAU,EAAG,GACtDqD,EAAeF,EAAsBpP,OAAS,IAErB,MAArBqP,GACqB,MAArBA,GAEJzL,IACAwL,EAAwBA,EAAsBG,YAG9CC,EAAQ7L,EAAc,UAAY,oBAEjCxC,QAAQyC,iBAAmB4L,EAAML,KAAKC,IAEtCE,IAAiBlB,IAAuBoB,EAAML,KAAKC,UAC7C,CACH5F,gBAAiBqF,EACjBzK,YAAagL,EACbR,uBAAwB7I,EACxBhB,oBAAqByF,EACrBvF,sBAAuBwF,EACvB5F,mBAAoBf,uDAOb2L,EAAKxL,WACxByL,EAAcD,EAAItB,MAAM,IAAIV,UAAUkC,KAAK,IAC3CvJ,GAAS,EAEJwJ,EAAO,EAAGC,EAAMJ,EAAIzP,OAAQ4P,EAAOC,EAAKD,IAAQ,SACjDE,EAAYF,IAASH,EAAIzP,OAAS,EAClCsP,EAAe,KAAKH,KAAKO,EAAYE,EAAO,IAE5CG,GAAQ,EACHC,EAAa/L,EAAQjE,OAAS,EAAGgQ,GAAc,EAAGA,OACrD/L,EAAQ+L,KAAgBN,EAAYE,EAAKI,GAAa,CACxDD,GAAQ,WAKRA,IAAUD,GAAaR,GAAe,CACtClJ,EAAQqJ,EAAIzP,OAAS,EAAI4P,gBAK1BxJ,4CAGO/E,SACc,UAArBA,EAAQ6B,UAA6C,aAArB7B,EAAQ6B,iDAGnCiG,EAAaU,OACrBoG,EAAc5P,OAAO+J,WACrB8F,EAAe7P,OAAOiK,YACtB6F,EAAMrP,SAASsP,gBACfC,GAAchQ,OAAOiQ,aAAeH,EAAII,aAAeJ,EAAIK,YAAc,GACzEC,GAAapQ,OAAOqQ,aAAeP,EAAIlK,YAAckK,EAAIQ,WAAa,GAEtEC,EAAqC,iBAApBzH,EAAYnC,IAAmBmC,EAAYnC,IAAMyJ,EAAYP,EAAe/G,EAAYrC,OAAS+C,EAAezC,OACjIyJ,EAAyC,iBAAtB1H,EAAYQ,MAAqBR,EAAYQ,MAAQR,EAAYO,KAAOG,EAAeC,MAC1GgH,EAA2C,iBAAvB3H,EAAYrC,OAAsBqC,EAAYrC,OAASqC,EAAYnC,IAAM6C,EAAezC,OAC5G2J,EAAuC,iBAArB5H,EAAYO,KAAoBP,EAAYO,KAAO2G,EAAaJ,EAAc9G,EAAYQ,MAAQE,EAAeC,YAEhI,CACH9C,IAAK4J,EAAUI,KAAKC,MAAMR,GAC1B9G,MAAOkH,EAAYG,KAAKE,KAAKb,EAAaJ,GAC1CnJ,OAAQgK,EAAaE,KAAKE,KAAKT,EAAYP,GAC3CxG,KAAMqH,EAAWC,KAAKC,MAAMZ,oDAQ5Bc,EAAa,CACbrH,MAAO,KACP1C,OAAQ,kBAGPjG,QAAQyB,KAAKyE,MAAMgC,4NAKzB8H,EAAWrH,MAAQnK,KAAKwB,QAAQyB,KAAKmH,YACrCoH,EAAW/J,OAASzH,KAAKwB,QAAQyB,KAAKoH,kBAEjC7I,QAAQyB,KAAKyE,MAAMgC,yBAEjB8H,8DAG0B9P,EAAS+P,EAAUC,OAW/CC,EAAwC,OAA3BjR,OAAOkR,gBAEpBC,EAAM7R,KAAKwI,cAAcqE,cAAc,OAC3CgF,EAAIC,GAAK,gDACJtJ,cAAcuJ,KAAK3E,YAAYyE,OAEhCnK,EAAQmK,EAAInK,MACZsK,EAAWtR,OAAOkH,iBAAmBA,iBAAiBlG,GAAWA,EAAQiG,aAE7ED,EAAMuK,WAAa,WACM,UAArBvQ,EAAQ6B,WACRmE,EAAMwK,SAAW,cAIrBxK,EAAM+J,SAAW,WACjB/J,EAAMyK,WAAa,SA1BF,CAAC,YAAa,YAAa,QAAS,SAAU,YAC3D,YAAa,iBAAkB,mBAC/B,oBAAqB,kBAAmB,aACxC,eAAgB,gBAAiB,cACjC,YAAa,cAAe,aAAc,cAC1C,WAAY,iBAAkB,aAAc,aAC5C,YAAa,gBAAiB,aAC9B,iBAAkB,gBAAiB,eAsB5BzP,SAAQ,SAAA0P,GACf1K,EAAM0K,GAAQJ,EAASI,MAGvBT,GACAjK,EAAMyC,gBAAYvD,SAASoL,EAAS7H,OAAS,QACzCzI,EAAQ6E,aAAeK,SAASoL,EAASvK,UACzCC,EAAM2K,UAAY,WAEtB3K,EAAM4K,SAAW,SAGrBT,EAAI1D,YAAczM,EAAQxB,MAAMoM,UAAU,EAAGmF,GAEpB,UAArB/P,EAAQ6B,WACRsO,EAAI1D,YAAc0D,EAAI1D,YAAYoE,QAAQ,MAAO,UAGjDC,EAAOxS,KAAKwI,cAAcqE,cAAc,QAC5C2F,EAAKrE,YAAczM,EAAQxB,MAAMoM,UAAUmF,IAAa,IACxDI,EAAIzE,YAAYoF,OAEZC,EAAO/Q,EAAQuF,wBACfuJ,EAAMrP,SAASsP,gBACfC,GAAchQ,OAAOiQ,aAAeH,EAAII,aAAeJ,EAAIK,YAAc,GACzEC,GAAapQ,OAAOqQ,aAAeP,EAAIlK,YAAckK,EAAIQ,WAAa,GAEtE3J,EAAM,EACN0C,EAAO,EACP/J,KAAK0S,sBACPrL,EAAMoL,EAAKpL,IACX0C,EAAO0I,EAAK1I,UAGVP,EAAc,CACdnC,IAAKA,EAAMyJ,EAAY0B,EAAKG,UAAY/L,SAASoL,EAASY,gBAAkBhM,SAASoL,EAASa,UAAYnR,EAAQ4E,UAClHyD,KAAMA,EAAO2G,EAAa8B,EAAKM,WAAalM,SAASoL,EAASe,kBAGzC,UAArBrR,EAAQ6B,WACIkP,EAAK1I,KAAO0I,EAAKtI,MAAQX,EAAYO,KACvC,IACNP,EAAYO,KAAO0I,EAAK1I,KAAO0I,EAAKtI,YAIxCmG,EAAc5P,OAAO+J,WACrB8F,EAAe7P,OAAOiK,YAEtBT,EAAiBlK,KAAKgT,oBACtB1I,EAAkBtK,KAAKuK,gBAAgBf,EAAaU,GAEpDI,EAAgBN,QAChBR,EAAYQ,MAAQsG,EAAc9G,EAAYO,KAC9CP,EAAYO,KAAO,YAGnBkJ,EAAejT,KAAKwB,QAAQiH,cAC1BzI,KAAKwB,QAAQiH,cAAc4B,aAC3BrK,KAAKwI,cAAcuJ,KAAK1H,gBAE1BC,EAAgBnD,OAAQ,KAIpB+L,EAAuBD,GAAgB1C,GAH1BvQ,KAAKwB,QAAQiH,cACxBzI,KAAKwB,QAAQiH,cAAcxB,wBAC3BjH,KAAKwI,cAAcuJ,KAAK9K,yBACuCI,KAErEmC,EAAYrC,OAAS+L,GAAwB3C,EAAekC,EAAKpL,IAAMmL,EAAKG,WAC5EnJ,EAAYnC,IAAM,cAGtBiD,EAAkBtK,KAAKuK,gBAAgBf,EAAaU,IAChCH,OAChBP,EAAYO,KAAOuG,EAAcpG,EAAeC,MAC1CuG,EAAaJ,EAAcpG,EAAeC,MAC1CuG,SACClH,EAAYQ,OAEnBM,EAAgBjD,MAChBmC,EAAYnC,IAAMkJ,EAAerG,EAAezC,OAC1CqJ,EAAYP,EAAerG,EAAezC,OAC1CqJ,SACCtH,EAAYrC,aAGlBqB,cAAcuJ,KAAKoB,YAAYtB,GAC7BrI,0DAGqB4J,OACxBpO,EACAkG,EAAMlL,KAAKmL,sBAEfnG,EAAQhF,KAAKwI,cAAc4C,eACrBC,SAASH,EAAIyB,WAAYyG,GAC/BpO,EAAMsG,OAAOJ,EAAIyB,WAAYyG,GAE7BpO,EAAMuG,UAAS,OAEXkH,EAAOzN,EAAMiC,wBACbuJ,EAAMrP,SAASsP,gBACfC,GAAchQ,OAAOiQ,aAAeH,EAAII,aAAeJ,EAAIK,YAAc,GACzEC,GAAapQ,OAAOqQ,aAAeP,EAAIlK,YAAckK,EAAIQ,WAAa,GAKtExH,EAAc,CACdO,KAJO0I,EAAK1I,KAIC2G,EACbrJ,IAJMoL,EAAKpL,IAIAoL,EAAKhL,OAASqJ,GAEzBR,EAAc5P,OAAO+J,WACrB8F,EAAe7P,OAAOiK,YAEtBT,EAAiBlK,KAAKgT,oBACtB1I,EAAkBtK,KAAKuK,gBAAgBf,EAAaU,GAEpDI,EAAgBN,QAChBR,EAAYO,KAAO,OACnBP,EAAYQ,MAAQsG,EAAcmC,EAAK1I,KAAO2G,OAG9CuC,EAAejT,KAAKwB,QAAQiH,cAC1BzI,KAAKwB,QAAQiH,cAAc4B,aAC3BrK,KAAKwI,cAAcuJ,KAAK1H,gBAE1BC,EAAgBnD,OAAQ,KAIpB+L,EAAuBD,GAAgB1C,GAH1BvQ,KAAKwB,QAAQiH,cACxBzI,KAAKwB,QAAQiH,cAAcxB,wBAC3BjH,KAAKwI,cAAcuJ,KAAK9K,yBACuCI,KAErEmC,EAAYnC,IAAM,OAClBmC,EAAYrC,OAAS+L,GAAwB3C,EAAekC,EAAKpL,YAGrEiD,EAAkBtK,KAAKuK,gBAAgBf,EAAaU,IAChCH,OAChBP,EAAYO,KAAOuG,EAAcpG,EAAeC,MAC1CuG,EAAaJ,EAAcpG,EAAeC,MAC1CuG,SACClH,EAAYQ,OAEnBM,EAAgBjD,MAChBmC,EAAYnC,IAAMkJ,EAAerG,EAAezC,OAC1CqJ,EAAYP,EAAerG,EAAezC,OAC1CqJ,SACCtH,EAAYrC,QAGlBnH,KAAK0S,sBACNlJ,EAAYO,KAAOP,EAAYO,KAAOP,EAAYO,KAAO/J,KAAKwB,QAAQiH,cAAcqK,WAAatJ,EAAYO,KAC7GP,EAAYnC,IAAMmC,EAAYnC,IAAMmC,EAAYnC,IAAMrH,KAAKwB,QAAQiH,cAAckK,UAAYnJ,EAAYnC,KAGtGmC,yCAGIjC,OAEP8L,EAEA9N,EAAIvF,KAAKiD,aAEI,IAANsC,aAEWtE,IAAfoS,GAAkD,IAAtBA,EAAW5L,WAGhB,KAF1B4L,EAAa9N,EAAE0B,yBAEAQ,cAEDxG,KADVsE,EAAIA,EAAEwF,WAAW,MACOxF,EAAE0B,kCAM9BqM,EAAUD,EAAWhM,IACrBkM,EAAaD,EAAUD,EAAW5L,UAElC6L,EAAU,EACV5S,OAAO6I,SAAS,EAAG7I,OAAOqQ,YAAcsC,EAAWhM,IAtBhC,SAuBhB,GAAIkM,EAAa7S,OAAOiK,YAAa,KACpC6I,EAAO9S,OAAOqQ,YAAcsC,EAAWhM,IAxBxB,GA0BfmM,EAAO9S,OAAOqQ,YAxBM,MAyBpByC,EAAO9S,OAAOqQ,YAzBM,SA4BpB0C,EAAU/S,OAAOqQ,aAAerQ,OAAOiK,YAAc4I,GAErDE,EAAUD,IACVC,EAAUD,GAGd9S,OAAO6I,SAAS,EAAGkK,wDA7kBhBzT,KAAKwB,QAAQiH,gBAAkBtH,SAAS4Q,OAAS/R,KAAKwB,QAAQiH,uBChFvEiL,wBACUlS,kBACHA,QAAUA,OACVA,QAAQmS,OAAS3T,oDAGb4T,EAASC,qBACXA,EAAMC,QAAO,SAAAC,UACTvO,EAAKgK,KAAKoE,EAASG,mCAI7BH,EAASG,UAC6B,OAAhC/T,KAAKoQ,MAAMwD,EAASG,iCAGzBH,EAASG,EAAQC,GACnBA,EAAOA,GAAQ,GAGLD,EAAO1T,WAGb4T,EAAMD,EAAKC,KAAO,GAClBC,EAAOF,EAAKE,MAAQ,GACpBC,EAAgBH,EAAKI,eAAiBL,GAAUA,EAAOhR,iBAGvDiR,EAAKK,WACE,CAACC,SAAUP,EAAQQ,MAAO,GAGrCX,EAAUI,EAAKI,eAAiBR,GAAWA,EAAQ7Q,kBAE/CyR,EAAexU,KAAKyU,SAASN,EAAeP,EAAS,EAAG,EAAG,WAC1DY,EAGE,CACHF,SAAUtU,KAAK0U,OAAOX,EAAQS,EAAaG,MAAOV,EAAKC,GACvDK,MAAOC,EAAaD,OAJb,sCAQNR,EAAQH,EAASgB,EAAaC,EAAcL,MAC7CxU,KAAKwB,QAAQ+M,wBAEbqF,EAAUA,EAAQpF,MAAMxO,KAAKwB,QAAQ+M,uBAAuBuG,QAAQ,GAAG,IAGvElB,EAAQvT,SAAWwU,QAGZ,CACHN,MAAOvU,KAAK+U,eAAeP,GAC3BG,MAAOH,EAAaQ,cAKxBjB,EAAO1T,SAAWuU,GAAehB,EAAQvT,OAASwU,EAAed,EAAO1T,OAASuU,YAMjFK,EAAMC,EAFN9F,EAAIwE,EAAQiB,GACZpO,EAAQsN,EAAOoB,QAAQ/F,EAAGwF,GAGvBnO,GAAS,GAAG,IACf+N,EAAa3G,KAAKpH,GAClByO,EAAOlV,KAAKyU,SAASV,EAAQH,EAASnN,EAAQ,EAAGoO,EAAe,EAAGL,GACnEA,EAAaY,OAGRF,SACMD,IAGNA,GAAQA,EAAKV,MAAQW,EAAKX,SAC3BU,EAAOC,GAGXzO,EAAQsN,EAAOoB,QAAQ/F,EAAG3I,EAAQ,UAG/BwO,0CAGIT,OACPD,EAAQ,EACRW,EAAO,SAEXV,EAAa9R,SAAQ,SAAC+D,EAAOjG,GACrBA,EAAI,IACAgU,EAAahU,EAAI,GAAK,IAAMiG,EAC5ByO,GAAQA,EAAO,EAGfA,EAAO,GAIfX,GAASW,KAGNX,iCAGJR,EAAQsB,EAASpB,EAAKC,OACrBI,EAAWP,EAAOzH,UAAU,EAAG+I,EAAQ,WAE3CA,EAAQ3S,SAAQ,SAAC+D,EAAOjG,GACpB8T,GAAYL,EAAMF,EAAOtN,GAASyN,EAC9BH,EAAOzH,UAAU7F,EAAQ,EAAI4O,EAAQ7U,EAAI,GAAM6U,EAAQ7U,EAAI,GAAKuT,EAAO1T,WAGxEiU,iCAGJV,EAAS0B,EAAKtB,qBACjBA,EAAOA,GAAQ,GACRsB,EACFC,QAAO,SAACC,EAAM9T,EAAS2N,EAAKiG,OACrBxF,EAAMpO,EAENsS,EAAKyB,WACL3F,EAAMkE,EAAKyB,QAAQ/T,MAGfoO,EAAM,SAIVwE,EAAWvL,EAAKqH,MAAMwD,EAAS9D,EAAKkE,UAExB,MAAZM,IACAkB,EAAKA,EAAKnV,QAAU,CAChB0T,OAAQO,EAASA,SACjBC,MAAOD,EAASC,MAChB9N,MAAO4I,EACPqG,SAAUhU,IAIX8T,IACR,IAENG,MAAK,SAACC,EAAGC,OACFC,EAAUD,EAAEtB,MAAQqB,EAAErB,aACtBuB,GACGF,EAAEnP,MAAQoP,EAAEpP,sDCvEHsP,aAxExBC,OAAAA,aAAS,WACTC,oBAAAA,aAAsB,WACtB5M,OAAAA,aAAS,WACTtC,YAAAA,aAAc,kBACdmP,eAAAA,aAAiB,0BACjBC,UAAAA,aAAY,SACZ7R,QAAAA,aAAU,UACVJ,iBAAAA,oBACAqK,sBAAAA,aAAwB,WACxB6H,eAAAA,aAAiB,WACjBC,iBAAAA,aAAmB,WACnBC,OAAAA,aAAS,YACTC,SAAAA,aAAW,cACX7R,WAAAA,aAAa,WACb+D,cAAAA,aAAgB,WAChB+N,gBAAAA,aAAkB,WAClB3K,oBAAAA,oBACA7H,YAAAA,oBACAgI,kBAAAA,aAAoB,WACpBvC,aAAAA,oBACAxD,kBAAAA,oBACAwQ,WAAAA,aAAa,SACbC,cAAAA,cAAgB,YAChB/R,kBAAAA,eAAoB,uBAEfT,iBAAmBA,OACnBqK,sBAAwBA,OACxB1I,aAAe,OACfjC,QAAU,QACVZ,YAAa,OACbV,UAAW,OACXmG,cAAgBA,OAChBzE,YAAcA,OACdgI,kBAAoBA,OACpBvC,aAAeA,OACfxF,kBAAmB,OACnBgC,kBAAoBA,EAErBjG,KAAKkE,mBACPI,EAAU,GACVN,GAAc,GAGZgS,OACGtR,WAAa,CAChB,CAEEJ,QAASA,EAGT+E,OAAQA,EAGRtC,YAAaA,EAGbmP,eAAgBA,EAGhBC,UAAWA,EAGXC,gBACEA,GAAkBO,EAAQC,uBAC1B/U,KAAK7B,MAGPqW,kBACEA,GAAoBM,EAAQE,yBAC5BhV,KAAK7B,MAGPwW,iBAAkBT,EAefS,EAdgB,iBAANT,EACQ,KAAbA,EAAEnG,OAAsB,KACrBmG,EAEQ,mBAANA,EACFA,EAAElU,KAAK2D,GAIdgR,GACA,iBACS,4BACP3U,KAAK2D,IAKX8Q,OAAQA,EAGRC,SAAUA,EAGVP,OAAQA,EAGRC,oBAAqBA,EAErBpK,oBAAqBA,EAErB4K,WAAYA,EAEZC,cAAeA,GAEf/R,kBAAmBA,SAGlB,CAAA,IAAID,QA8CH,IAAIjB,MAAM,sCA7CZzD,KAAKkE,kBACP4S,QAAQC,KACN,mEAECrS,WAAaA,EAAWsS,KAAI,SAAAtR,SACxB,CACLpB,QAASoB,EAAKpB,SAAWA,EACzB+E,OAAQ3D,EAAK2D,QAAUA,EACvBtC,YAAarB,EAAKqB,aAAeA,EACjCmP,eAAgBxQ,EAAKwQ,gBAAkBA,EACvCC,UAAWzQ,EAAKyQ,WAAaA,EAC7BC,gBACE1Q,EAAK0Q,gBAAkBO,EAAQC,uBAC/B/U,KAAK2D,GACP6Q,kBACE3Q,EAAK2Q,kBAAoBM,EAAQE,yBACjChV,KAAK2D,GAEPgR,gBAAkB,SAAAT,SACC,iBAANA,EACQ,KAAbA,EAAEnG,OAAsB,KACrBmG,EAEQ,mBAANA,EACFA,EAAElU,KAAK2D,GAIdgR,GACA,iBACS,4BACP3U,KAAK2D,GAbO,CAefgR,GACHF,OAAQ5Q,EAAK4Q,QAAUA,EACvBC,SAAU7Q,EAAK6Q,UAAYA,EAC3BP,OAAQtQ,EAAKsQ,OACbC,oBAAqBvQ,EAAKuQ,oBAC1BpK,oBAAqBnG,EAAKmG,oBAC1B4K,WAAY/Q,EAAK+Q,YAAcA,EAC/BC,cAAehR,EAAKgR,eAAiBA,GACrC/R,kBAAmBe,EAAKf,mBAAqBA,WAO/CyE,EAAapJ,UACbuB,EAAcvB,UACdgI,EAAkBhI,UAClB0T,EAAc1T,0DA4CXA,KAAK0E,WAAWsS,KAAI,SAAA7H,UAClBA,EAAO7K,0CAIXQ,OACAA,QACG,IAAIrB,MAAM,qDAII,oBAAXwT,QAA0BnS,aAAcmS,SACjDnS,EAAKA,EAAGoS,OAKRpS,EAAGqS,cAAgBC,UACnBtS,EAAGqS,cAAgBE,gBACnBvS,EAAGqS,cAAgBvX,cAEfS,EAASyE,EAAGzE,OACPG,EAAI,EAAGA,EAAIH,IAAUG,OACvB8W,QAAQxS,EAAGtE,cAGb8W,QAAQxS,mCAITA,GACFA,EAAGyS,aAAa,iBAClBT,QAAQC,KAAK,gCAAkCjS,EAAGvB,eAG/CiU,eAAe1S,QACfrD,OAAOI,KAAKiD,GACjBA,EAAG2S,aAAa,gBAAgB,0CAGnB/V,OAC2C,IAApDiV,EAAQe,aAAavC,QAAQzT,EAAQ6B,YAClC7B,EAAQiM,sBACL,IAAIlK,MAAM,4BAA8B/B,EAAQ6B,SAAW,4DAK5D2S,OACLyB,EAAU3X,KAAKgF,MAAMwD,cAAcqE,cAAc,OACnD+K,EAAK5X,KAAKgF,MAAMwD,cAAcqE,cAAc,aAC9C8K,EAAQE,UAAY3B,EACpByB,EAAQvK,YAAYwK,GAEhB5X,KAAKyI,cACAzI,KAAKyI,cAAc2E,YAAYuK,GAGjC3X,KAAKgF,MAAMwD,cAAcuJ,KAAK3E,YAAYuK,uCAGvCjW,EAAS6H,kBAGjBvJ,KAAKsC,UACLtC,KAAK4D,QAAQlC,UAAYA,GACzB1B,KAAK4D,QAAQa,cAAgBzE,KAAK8X,iCAI/BA,2BAA6B9X,KAAK4D,QAAQa,YAG1CzE,KAAKiD,YACHA,KAAOjD,KAAK+X,WAAW/X,KAAK4D,QAAQc,WAAWwR,gBACpDxU,EAAQsW,YAAchY,KAAKiD,UACtBgF,WAAWpG,KAAK7B,KAAKiD,YAGvBX,UAAW,OACXuD,aAAe,EAEf7F,KAAK4D,QAAQa,mBACXb,QAAQa,YAAc,QAGvBwT,EAAgB,SAAAjC,MAEfjN,EAAKzG,cAIN4V,EAAQnP,EAAK4K,OAAOG,OAAO/K,EAAKnF,QAAQa,YAAauR,EAAQ,CAC/D/B,IAAKlL,EAAKnF,QAAQc,WAAW+R,WAAWxC,KAAO,SAC/CC,KAAMnL,EAAKnF,QAAQc,WAAW+R,WAAWvC,MAAQ,UACjDG,KAAMtL,EAAKnF,QAAQc,WAAW+R,WAAWpC,KACzCoB,QAAS,SAAA3Q,MACuC,iBAAnCiE,EAAKnF,QAAQc,WAAW4R,cAC1BxR,EAAGiE,EAAKnF,QAAQc,WAAW4R,QAC7B,GAA8C,mBAAnCvN,EAAKnF,QAAQc,WAAW4R,cACjCvN,EAAKnF,QAAQc,WAAW4R,OAAOxR,EAAIiE,EAAKnF,QAAQa,mBAEjD,IAAIhB,MACR,mEAMJsF,EAAKnF,QAAQc,WAAWgS,gBAC1BwB,EAAQA,EAAMlD,MAAM,EAAGjM,EAAKnF,QAAQc,WAAWgS,gBAGjD3N,EAAKnF,QAAQgC,cAAgBsS,MAEzBN,EAAK7O,EAAK9F,KAAKkV,cAAc,SAEjCpP,EAAK/D,MAAMuD,oBAAoBgB,IAE1B2O,EAAM7X,OAAQ,KACb+X,EAAe,IAAIzX,YAAY,mBAAoB,CACrDK,OAAQ+H,EAAK9F,cAEf8F,EAAKnF,QAAQlC,QAAQ+K,cAAc2L,QAEmB,mBAA5CrP,EAAKnF,QAAQc,WAAW8R,kBAC7BzN,EAAKnF,QAAQc,WAAW8R,oBAC1BzN,EAAKnF,QAAQc,WAAW8R,gBAEzBzN,EAAKxG,WAE8C,mBAA5CwG,EAAKnF,QAAQc,WAAW8R,gBAC1BoB,EAAG9K,UAAY/D,EAAKnF,QAAQc,WAAW8R,kBACvCoB,EAAG9K,UAAY/D,EAAKnF,QAAQc,WAAW8R,iBAMhDoB,EAAG9K,UAAY,OACXuL,EAAWtP,EAAK/D,MAAMwD,cAAc0E,yBAExCgL,EAAMxV,SAAQ,SAACgD,EAAMe,OACfrD,EAAK2F,EAAK/D,MAAMwD,cAAcqE,cAAc,MAChDzJ,EAAGqU,aAAa,aAAchR,GAC9BrD,EAAGyU,UAAY9O,EAAKnF,QAAQc,WAAWyR,UACvC/S,EAAGlB,iBAAiB,aAAa,SAAAqD,WACbwD,EAAKuP,cAAc/S,EAAEpC,WAA9BsD,cACW,IAAhBlB,EAAEgT,WACJxP,EAAKtH,OAAO4E,YAAYI,MAGxBsC,EAAKlD,eAAiBY,GACxBrD,EAAGyD,UAAUC,IAAIiC,EAAKnF,QAAQc,WAAWqC,aAE3C3D,EAAG0J,UAAY/D,EAAKnF,QAAQc,WAAW2R,iBAAiB3Q,GACxD2S,EAASjL,YAAYhK,MAEvBwU,EAAGxK,YAAYiL,KAG6B,mBAAnCrY,KAAK4D,QAAQc,WAAWsR,QAC7BhW,KAAK4D,QAAQc,WAAWuR,2BACrBhT,KAAKkV,cAAc,MAAMrL,UAAY9M,KAAK4D,QAAQc,WAAWuR,yBAC7DjR,MAAMuD,oBAAoBgB,SAG5B3F,QAAQc,WAAWsR,OAAOhW,KAAK4D,QAAQa,YAAawT,IAEzDA,EAAcjY,KAAK4D,QAAQc,WAAWsR,+CAI5BlR,OACPA,EAAI,MAAO,OACV2B,EAAQ3B,EAAGnB,aAAa,qBACtB8C,EAA4C,CAAC3B,EAAI2B,GAAzCzG,KAAKsY,cAAcxT,EAAGtB,0DAGlB9B,EAAS8W,GACzB9W,IAAYP,SAASsX,oBAClBC,gBAAgBhX,QAGlBkC,QAAQc,WAAa1E,KAAK0E,WAAW8T,GAAmB,QACxD5U,QAAQC,iBAAkB,OAC1BD,QAAQlC,QAAUA,EAEnBA,EAAQiI,kBACV3J,KAAK2Y,mBAAmB3Y,KAAK4D,QAAQc,WAAWJ,SAC7CtE,KAAK4Y,cAAclX,EAAS1B,KAAK4D,QAAQc,WAAWJ,cAEpDM,YAAYlD,2CAIHoD,MACdA,EAAG6G,aAE6B,IAAvBjL,OAAO8M,mBACiB,IAAxBrM,SAASiK,YAChB,KACIpG,EAAQ7D,SAASiK,cACrBpG,EAAM6T,mBAAmB/T,GACzBE,EAAMuG,UAAS,OACXL,EAAMxK,OAAO8M,eACjBtC,EAAIM,kBACJN,EAAIQ,SAAS1G,QACR,QAA4C,IAAjC7D,SAAS4Q,KAAK+G,gBAAgC,KAC1DC,EAAY5X,SAAS4Q,KAAK+G,kBAC9BC,EAAUC,kBAAkBlU,GAC5BiU,EAAUxN,UAAS,GACnBwN,EAAUE,qDAKKrN,OACbV,EAAKlG,GAETA,GADAkG,EAAMxK,OAAO8M,gBACDO,WAAW,IACjBnB,qBACFsM,EAAW/X,SAASgY,eAAevN,GACvC5G,EAAMqI,WAAW6L,GACjBlU,EAAM6T,mBAAmBK,GACzBlU,EAAMuG,UAAS,GACfL,EAAIM,kBACJN,EAAIQ,SAAS1G,yCAIDoU,EAAUxN,OAClByN,EAAYD,EAAS9S,UACrBgT,EAAWF,EAAS7M,eAEpBgN,EAAQH,EAASlZ,MAAMoM,UAAU,EAAGgN,GACpCE,EAAOJ,EAASlZ,MAAMoM,UACxB8M,EAAS5M,aACT4M,EAASlZ,MAAMG,QAEjB+Y,EAASlZ,MAAQqZ,EAAQ3N,EAAO4N,EAChCF,GAAsB1N,EAAKvL,OAC3B+Y,EAAS7M,eAAiB+M,EAC1BF,EAAS5M,aAAe8M,EACxBF,EAASzN,QACTyN,EAAS9S,UAAY+S,qCAIjBrZ,KAAKiD,YACFA,KAAKyE,MAAMgC,QAAU,sBACrBpH,UAAW,OACXuD,aAAe,OACfjC,QAAU,8CAID6C,EAAOqF,MAEF,iBADrBrF,EAAQG,SAASH,MACgBpC,MAAMoC,QACnCf,EAAO1F,KAAK4D,QAAQgC,cAAca,GAClCgT,EAAUzZ,KAAK4D,QAAQc,WAAW0R,eAAe1Q,GACrC,OAAZ+T,GAAkBzZ,KAAK0Z,YAAYD,EAAS3N,EAAepG,wCAGrD+T,EAAS3N,EAAepG,QAC7BV,MAAM2U,mBAAmBF,GAAS,GAAM,EAAM3N,EAAepG,mCAG5DhB,EAAYkV,EAAWrH,MACI,mBAAtB7N,EAAWsR,aACd,IAAIvS,MAAM,oDAIhBiB,EAAWsR,OAHDzD,EAGUqH,EAFAlV,EAAWsR,OAAO6D,OAAOD,kCAM1CpB,EAAiBoB,EAAWrH,OAC7B9L,EAAQG,SAAS4R,MACA,iBAAV/R,EACT,MAAM,IAAIhD,MAAM,6DAEdiB,EAAa1E,KAAK0E,WAAW+B,QAE5BqT,QAAQpV,EAAYkV,EAAWrH,yCAGxBqH,EAAWrH,OACnBvS,KAAKsC,eAGD,IAAImB,MACR,sEAHGqW,QAAQ9Z,KAAK4D,QAAQc,WAAYkV,EAAWrH,kCAQ9CzN,OACAA,QACG,IAAIrB,MAAM,qDAII,oBAAXwT,QAA0BnS,aAAcmS,SACjDnS,EAAKA,EAAGoS,OAKRpS,EAAGqS,cAAgBC,UACnBtS,EAAGqS,cAAgBE,gBACnBvS,EAAGqS,cAAgBvX,cAEfS,EAASyE,EAAGzE,OACPG,EAAI,EAAGA,EAAIH,IAAUG,OACvBuZ,QAAQjV,EAAGtE,cAGbuZ,QAAQjV,mCAITA,mBACDrD,OAAOuY,OAAOlV,GACfA,EAAGkT,kBACA/P,WAAW+R,OAAOlV,EAAGkT,aAG5BlU,YAAW,WACTgB,EAAGmV,gBAAgB,gBACnBC,EAAK5X,UAAW,EACZwC,EAAGkT,aACLlT,EAAGkT,YAAY1Q,oDAtXZtH,KAAKma,wBAGDC,MACPpa,KAAKma,WAAaC,SACfD,UAAYC,EACbpa,KAAK4D,QAAQlC,SAAS,KACpB0W,EAAe,IAAIzX,qCAA8ByZ,SAChDxW,QAAQlC,QAAQ+K,cAAc2L,oDAKZ1S,eACP,IAATA,YACC1F,KAAK4D,QAAQc,WAAWJ,gBAAUtE,KAAK4D,QAAQa,aACvDzE,KAAKgF,MAAM2E,kBAAkB3J,KAAK4D,QAAQlC,SAE1C,kCACC1B,KAAK4D,QAAQc,WAAWJ,QACvBoB,EAAKgQ,SAAS1V,KAAK4D,QAAQc,WAAW6R,WACxC,UAKFvW,KAAK4D,QAAQc,WAAWJ,QACxBoB,EAAKgQ,SAAS1V,KAAK4D,QAAQc,WAAW6R,0DAIX8D,UACtBA,EAAUtG,kDAIV,CAAC,WAAY"}